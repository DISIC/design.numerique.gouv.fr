{"version":3,"sources":["<no source>","%3Cinput%20css%20Easj3J%3E","file:///Users/ket/Documents/work/dsfr/src/component/form/main.scss","file:///Users/ket/Documents/work/dsfr/src/component/form/style/module/_label.scss","file:///Users/ket/Documents/work/dsfr/src/core/style/typography/tool/_styles.scss","file:///Users/ket/Documents/work/dsfr/module/color/mixin/_element.scss","file:///Users/ket/Documents/work/dsfr/src/core/style/spacing/tool/_space.scss","file:///Users/ket/Documents/work/dsfr/src/component/form/style/module/_hint-text.scss","file:///Users/ket/Documents/work/dsfr/src/component/form/style/module/_fieldset.scss","file:///Users/ket/Documents/work/dsfr/src/core/style/spacing/tool/_position.scss","file:///Users/ket/Documents/work/dsfr/src/core/style/display/tool/_display.scss","file:///Users/ket/Documents/work/dsfr/src/core/style/typography/tool/_font-weight.scss","file:///Users/ket/Documents/work/dsfr/src/core/style/spacing/tool/_size.scss","file:///Users/ket/Documents/work/dsfr/src/core/style/selector/tool/_pseudo.scss","file:///Users/ket/Documents/work/dsfr/src/component/form/style/module/_message.scss","file:///Users/ket/Documents/work/dsfr/src/core/style/display/tool/_sr-only.scss","file:///Users/ket/Documents/work/dsfr/src/core/style/icon/tool/_default.scss","file:///Users/ket/Documents/work/dsfr/src/core/style/display/tool/_mask-image.scss","file:///Users/ket/Documents/work/dsfr/src/component/form/style/_scheme.scss","file:///Users/ket/Documents/work/dsfr/src/component/form/deprecated/style/_module.scss","file:///Users/ket/Documents/work/dsfr/src/component/form/deprecated/style/_scheme.scss","file:///Users/ket/Documents/work/dsfr/module/media-query/mixin/_respond-from.scss","file:///Users/ket/Documents/work/dsfr/module/shame/media-query/mixin/_order.scss","file:///Users/ket/Documents/work/dsfr/module/legacy/mixin/_legacy.scss","file:///Users/ket/Documents/work/dsfr/src/component/form/style/_legacy.scss","file:///Users/ket/Documents/work/dsfr/src/core/style/icon/tool/_legacy.scss","file:///Users/ket/Documents/work/dsfr/src/component/form/print.scss"],"names":[],"mappings":"AAAA;;GAAA;ACAA,gBAAgB;;ACKhB;;cAAA;ACLA;EACE,cAAA;ECyBA,eAAA;EAGE,mBAAA;ECYA,6BAAA;AJrBJ;;AEhBE;;;EGyBI,kBAXA;ALKN;;AMvBA;EACE,cAAA;EHyBA,kBAAA;EAGE,oBAAA;;EA4EA,wBAAA;AH3EJ;;AMxBE;EDuBI,mBAXA;ALeN;;AO/BA;ECME,kBAAA;EHyBE,uBAfE;EAeF,kBAfE;EIPF,aAAA;EAIA,mBAAA;EAIA,qBAAA;EAQA,eAAA;EFpBF,SAAA;APqCF;;AOnCE;EFoBI,oBAXA;EAGA,qBAHA;EAIA,sBAJA;EAGA,qBAHA;EAIA,sBAJA;EFQJ,eAAA;EAGE,mBAAA;EOVF,gBAAA;ECTI,WAAA;EP+BF,6BAAA;AJcJ;;AOtCI;EGEF,gBAAA;AVuCF;;AOrCI;EFQE,kBAXA;EKCJ,gBAAA;AV2CF;;AOnCE;;;EAGE,4BAAA;EACA,+BAAA;EACA,yCAAA;APmCJ;;AOhCE;;;EAGE,4BAAA;EACA,wBAAA;EACA,yBAAA;APgCJ;;AO7BE;EACE,cAAA;EIlBE,eAAA;ENLA,oBAHA;EAIA,qBAJA;EAWA,mBAXA;AL6DN;;AO9BI;EACE,cAAA;APgCN;;AOxBM;;EAEE,YAAA;AP8BR;;AOxBI;EACE,cAAA;AP0BN;;AOvBI;EFzCE,+BAXA;AL8EN;;AOpBI;EACE,eAAA;APsBN;;AOnBI;EFnDE,gCAXA;ALoFN;;AOhBI;EACE,cAAA;APkBN;;AOfI;EF7DE,+BAXA;AL0FN;;AY5FE;;;;;;;;;;;;;;;;EAGI,WLuFiB;EKnFjB,cAAA;EPMA,oBAXA;AL6GN;;AOdE;EACE,cAAA;EF7FE,oBAHA;EAIA,qBAJA;ALkHN;;AOfI;EFxFE,mBAXA;ALqHN;;AavIA;EACE,aAAA;EACA,uBAAA;EJSE,aAAA;EAIA,mBAAA;EAIA,uBAAA;ENOF,kBAAA;EAGE,oBAAA;EEIA,qBAfE;ALgIN;;AYlIE;EAGI,uBCZW;ELCf,kBAAA;EGkDI,UAAA;EAGA,WAAA;EN5BF,UAfE;EAeF,YAfE;ESRJ,gBAAA;EACA,sBAAA;EACA,mBAAA,EAAA,eAAA;EACA,SAAA;EACA,cAAA;AdiJF;;AapJE;EACE,aAAA;ERiBE,gBAXA;ALiJN;;AYnJE;;;EGyCE,cAAA;EAEA,uDAAA;EACA,8BAAA;EJFE,uBAAA;EAGA,wBAAA;EKlDJ,4BDmD2B;EClD3B,oBDkD2B;EApBzB,iBAAA;EHvBE,WGqD+B;EFpD/B,qBAAA;ERSA,qBAXA;EAWA,oBAXA;AL2JN;;AY7JE;EIVA,gED0CM;ECzCN,wDDyCM;Af0IR;;AY1KE;EIVA,kED0CM;ECzCN,0DDyCM;Af8IR;;AY9KE;EIVA,+DD0CM;ECzCN,uDDyCM;AfkJR;;AiBvLM;;;;Eb8BF,kCAAA;AJ6JJ;;AiBrLM;;;;EbwBF,gCAAA;AJgKJ;;AiBlLM;;;;EbkBF,+BAAA;AJmKJ;;AiB/KM;;;;;;;;EbYF,gCAAA;AJ0KJ;;AiB5KI;EbEA,gCAAA;AJiLJ;;AiB/KI;EbFA,kCAAA;AJoLJ;;AiB9KI;EbNA,+BAAA;AJuLJ;;AiB5KM;;EbXF,gCAAA;AJ0LJ;;AiBxKE;;EblBE,+BAAA;AJ+LJ;;AiBvKI;EbxBA,gCAAA;AJmMJ;;AiBvKI;Eb5BA,kCAAA;AJsMJ;;AiBtKI;EbhCA,+BAAA;AJyMJ;;AiBlKM;;;EbvCF,gCAAA;AJ+MJ;;AiB/JQ;;;EbhDJ,gCAAA;AJqNJ;;AiBzJI;;Eb5DA,6FAAA;AJ4NJ;;AiB3JI;;EbjEA,gCAAA;AJ+NJ;;AiBzJI;;EbtEA,iGAAA;AJkOJ;;AiBvJI;;Eb3EA,kCAAA;AJqOJ;;AiBrJI;;EbhFA,2FAAA;AJwOJ;;AiBnJI;;EbrFA,+BAAA;AJ2OJ;;AkB9QE;;EbuBI,qBAXA;ALsQN;;AkB7QI;;EbkBE,mBAXA;ALyQN;;AkBxQI;ETRA,aAAA;EAQA,qBAAA;EAIA,2BAAA;EAIA,eAAA;EJMA,gCAfE;ALiRN;;AkB3QI;EACE,oBAAA;EbIA,gBAXA;ALqRN;;AkB3QM;EbCA,aAXA;ALwRN;;AkB1QM;EbHA,qBAXA;AL2RN;;AkBzQM;EbPA,gBAXA;AL8RN;;AkBvQI;EACE,oBAAA;AlByQN;;AkBvQM;EbfA,qBAXA;ALoSN;;AkBtQM;EbnBA,aAXA;ALuSN;;AkBrQM;EbvBA,gBAXA;AL0SN;;AkBlQE;EVlDA,kBAAA;EHyBE,gBAfE;Ea2CF,WAAA;AlBoQJ;;AkBhQM;;EbpCA,oBAXA;ALmTN;;AkBhQM;;EbpCF,kBAfE;ALuTN;;AkB7PM;;EACE,YAAA;AlBgQR;;AkB5PI;;;EbpDE,aAXA;EAWA,mBAXA;EAWA,mBAXA;ALgUN;;AkBvPA;;;EThFI,aAAA;EAIA,mBAAA;EAIA,mBAAA;ENOF,kBAAA;EAGE,oBAAA;EEAE,gBAXA;EAWA,gBAXA;AL4UN;;AY9UE;;;EGyCE,cAAA;EAEA,uDAAA;EACA,8BAAA;EJFE,uBAAA;EAGA,wBAAA;EKlDJ,4BDmD2B;EClD3B,oBDkD2B;EApBzB,iBAAA;EHvBE,WGqD+B;EG2BjC,qBAAA;EbtEE,qBAXA;ALwVN;;AkBnQE;;;;;;;;;Eb1EI,mBAXA;AL6WN;;AY/WE;EIVA,gED0CM;ECzCN,wDDyCM;AfoVR;;AYpXE;EIVA,kED0CM;ECzCN,0DDyCM;AfyVR;;AYzXE;EIVA,+DD0CM;ECzCN,uDDyCM;Af8VR;;AmBrYE;EfgCE,gCAAA;AJyWJ;;AmBrYE;Ef4BE,kCAAA;AJ6WJ;;AmBrYE;EfwBE,+BAAA;AJiXJ;;AY1YE;ERyBE,uDAAA;AJqXJ;;AY9YE;ERyBE,qDAAA;AJwXJ;;AYjZE;ERyBE,oDAAA;AJ2XJ;AoBrZI;ECRI,cAAA;;EAAA,cAAA;ArBDR;AoBSI;ECRI,cAAA;Ed6CF;IAEI,cAAA;EPgCR;;EqB/EM,cAAA;ArBER;AoBMI;ECRI,cAAA;;EAAA,cAAA;ArBKR;AoBGI;ECRI,cAAA;;EAAA,cAAA;ArBQR;AsBNI;ECAA;IACE,eAAA;InB+BF,cAAA;EJ4YF;;EYraA;;IYME,6BAAA;IACA,qBAAA;IACA,4BAAA;IARA,8DAFI;Ib4CF,WAAA;IAGA,YAAA;EX6XJ;;EY1aA;;IYME,6BAAA;IACA,qBAAA;IACA,4BAAA;IARA,gEAFI;Ib4CF,WAAA;IAGA,YAAA;EXyYJ;;EYtbA;;IYME,6BAAA;IACA,qBAAA;IACA,4BAAA;IARA,6DAFI;Ib4CF,WAAA;IAGA,YAAA;EXqZJ;;EiBvcI;;;;Ib8BF,cAAA;EJqbF;;EiB7cI;;;;IbwBF,cAAA;EJ0bF;;EiB5cI;;;;IbkBF,cAAA;EJ+bF;;EiB3cI;;;;;;;;IbYF,cAAA;EJwcF;;EiB7cA;IbKE,cAAA;EJ8cF;;EiBhdE;IbEA,cAAA;EJmdF;;EiBjdE;IbFA,cAAA;EJwdF;;EiBldE;IbNA,cAAA;EJ6dF;;EiBldI;;IbXF,cAAA;EJkeF;;EiBhdA;;IblBE,WAAA;EJyeF;;EiBjdE;IbxBA,cAAA;EJ+eF;;EiBndE;Ib5BA,cAAA;EJofF;;EiBpdE;IbhCA,cAAA;EJyfF;;EiBldI;;;IbvCF,cAAA;EJigBF;;EiBjdM;;;IbhDJ,cAAA;EJygBF;;EiB7cE;;Ib5DA,yDAAA;EJohBF;;EiBndE;;IbjEA,cAAA;EJyhBF;;EiBndE;;IbtEA,yDAAA;EJ8hBF;;EiBndE;;Ib3EA,cAAA;EJmiBF;;EiBndE;;IbhFA,yDAAA;EJwiBF;;EiBndE;;IbrFA,cAAA;EJ6iBF;;EYtkBA;;IYME,6BAAA;IACA,qBAAA;IACA,4BAAA;IARA,8DAFI;Ib4CF,WAAA;IAGA,YAAA;EXiiBJ;;EY9kBA;;IYME,6BAAA;IACA,qBAAA;IACA,4BAAA;IARA,gEAFI;Ib4CF,WAAA;IAGA,YAAA;EX6iBJ;;EmBjmBA;IfgCE,cAAA;EJ6kBF;;EmBzmBA;If4BE,cAAA;EJmlBF;;EmB3mBA;IfwBE,cAAA;EJylBF;;EYlnBA;IRyBE,mCAAA;EJ+lBF;;EYxnBA;IRyBE,mCAAA;EJomBF;;EY7nBA;IRyBE,mCAAA;EJymBF;AAxLF;AyBrdA;ERMM;;;;Ib8BF,cAAA;EJ+mBF;;EiBvoBI;;;;IbwBF,cAAA;EJknBF;;EiBpoBI;;;;IbkBF,cAAA;EJqnBF;;EiBjoBI;;;;;;;;IbYF,cAAA;EJ4nBF;;EiBjoBA;IbKE,cAAA;EJ+nBF;;EiBjoBE;IbEA,cAAA;EJkoBF;;EiBhoBE;IbFA,cAAA;EJqoBF;;EiB/nBE;IbNA,cAAA;EJwoBF;;EiB7nBI;;IbXF,cAAA;EJ2oBF;;EiBznBA;;IblBE,WAAA;IDfF,eAAA;IAGE,mBAAA;EH2pBF;;EiBvnBE;IbxBA,cAAA;EJkpBF;;EiBtnBE;Ib5BA,cAAA;EJqpBF;;EiBrnBE;IbhCA,cAAA;EJwpBF;;EiBjnBI;;;IbvCF,cAAA;EJ6pBF;;EiB7mBM;;;IbhDJ,cAAA;EJkqBF;;EiB1mBE;IbxDA,cAAA;EJqqBF;;EiBzmBE;;Ib5DA,yDAAA;EJwqBF;;EiBvmBE;;IbjEA,cAAA;EJ2qBF;;EiBrmBE;;IbtEA,yDAAA;EJ8qBF;;EiBnmBE;;Ib3EA,cAAA;EJirBF;;EiBjmBE;;IbhFA,yDAAA;EJorBF;;EiB/lBE;;IbrFA,cAAA;EJurBF;AAMF","file":"form.css","sourcesContent":[null,"@charset \"UTF-8\";\n/* ¯¯¯¯¯¯¯¯¯ *\\\n  FORM\n\\* ˍˍˍˍˍˍˍˍˍ */\n@media (min-width: 36em) {\n  /*! media sm */\n}\n@media (min-width: 48em) {\n  /*! media md */\n}\n@media (min-width: 62em) {\n  /*! media lg */\n}\n@media (min-width: 78em) {\n  /*! media xl */\n}\n.fr-label {\n  display: block;\n  font-size: 1rem;\n  line-height: 1.5rem;\n}\n.fr-label + .fr-input, .fr-label + .fr-input-wrap, .fr-label + .fr-select {\n  margin-top: 0.5rem;\n}\n\n.fr-hint-text {\n  display: block;\n  font-size: 0.75rem;\n  line-height: 1.25rem;\n  --text-spacing: 0 0 1rem;\n}\n.fr-hint-text + .fr-hint-text {\n  margin-top: 0.25rem;\n}\n\n.fr-fieldset {\n  position: relative;\n  margin: 0 -0.75rem 1rem;\n  padding: 0 0.25rem;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  flex-wrap: wrap;\n  border: 0;\n}\n.fr-fieldset__legend {\n  padding-bottom: 1rem;\n  padding-left: 0.75rem;\n  padding-right: 0.75rem;\n  margin-left: -0.25rem;\n  margin-right: -0.25rem;\n  font-size: 1rem;\n  line-height: 1.5rem;\n  font-weight: 700;\n  width: 100%;\n}\n.fr-fieldset__legend--regular {\n  font-weight: 400;\n}\n.fr-fieldset__legend .fr-hint-text {\n  margin-top: 0.5rem;\n  font-weight: 400;\n}\n.fr-fieldset--valid, .fr-fieldset--error, .fr-fieldset--info {\n  background-repeat: no-repeat;\n  background-position: 0 -2.25rem;\n  background-size: 2px calc(100% + 1.25rem);\n}\n.fr-fieldset--valid .fr-fieldset__legend, .fr-fieldset--error .fr-fieldset__legend, .fr-fieldset--info .fr-fieldset__legend {\n  background-repeat: no-repeat;\n  background-position: 0 0;\n  background-size: 2px 100%;\n}\n.fr-fieldset__element {\n  flex: 1 1 100%;\n  max-width: 100%;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  margin-bottom: 1rem;\n}\n.fr-fieldset__element--inline {\n  flex: 0 0 auto;\n}\n@media (min-width: 48em) {\n  .fr-fieldset__element--inline\\@md {\n    flex: 0 0 auto;\n  }\n}\n.fr-fieldset__element--inline-grow, .fr-fieldset__element--inline\\@md.fr-fieldset__element--inline-grow {\n  flex-grow: 1;\n}\n.fr-fieldset__element--year {\n  flex: 0 0 8rem;\n}\n.fr-fieldset__element--year:not(.fr-fieldset__element--inline) {\n  margin-right: calc(100% - 8rem);\n}\n.fr-fieldset__element--postal {\n  flex: 0 0 16rem;\n}\n.fr-fieldset__element--postal:not(.fr-fieldset__element--inline) {\n  margin-right: calc(100% - 16rem);\n}\n.fr-fieldset__element--number {\n  flex: 0 0 6rem;\n}\n.fr-fieldset__element--number:not(.fr-fieldset__element--inline) {\n  margin-right: calc(100% - 6rem);\n}\n.fr-fieldset__legend > h1:last-child::after,\n.fr-fieldset__legend > h2:last-child::after,\n.fr-fieldset__legend > h3:last-child::after,\n.fr-fieldset__legend > h4:last-child::after,\n.fr-fieldset__legend > h5:last-child::after,\n.fr-fieldset__legend > h6:last-child::after,\n.fr-fieldset__legend > p:last-child::after,\n.fr-fieldset__legend > .fr-fieldset:last-child::after, .fr-fieldset__element > h1:last-child::after,\n.fr-fieldset__element > h2:last-child::after,\n.fr-fieldset__element > h3:last-child::after,\n.fr-fieldset__element > h4:last-child::after,\n.fr-fieldset__element > h5:last-child::after,\n.fr-fieldset__element > h6:last-child::after,\n.fr-fieldset__element > p:last-child::after,\n.fr-fieldset__element > .fr-fieldset:last-child::after {\n  content: \"\";\n  display: block;\n  margin-bottom: -1rem;\n}\n.fr-fieldset > .fr-messages-group {\n  flex: 1 1 100%;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n}\n.fr-fieldset > .fr-messages-group > .fr-message:last-child {\n  margin-bottom: 1rem;\n}\n\n.fr-message {\n  --comma: \", \";\n  --content: var(--comma);\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  font-size: 0.75rem;\n  line-height: 1.25rem;\n  margin: 0 0 0.25rem 0;\n}\n.fr-message::after {\n  content: var(--content);\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap; /* added line */\n  border: 0;\n  display: block;\n}\n.fr-message:last-child {\n  --comma: \". \";\n  margin-bottom: 0;\n}\n.fr-message--error::before, .fr-message--valid::before, .fr-message--info::before {\n  flex: 0 0 auto;\n  display: inline-block;\n  vertical-align: calc((0.75em - var(--icon-size)) * 0.5);\n  background-color: currentColor;\n  width: var(--icon-size);\n  height: var(--icon-size);\n  -webkit-mask-size: 100% 100%;\n  mask-size: 100% 100%;\n}\n.fr-message--error::before, .fr-message--valid::before, .fr-message--info::before {\n  --icon-size: 1rem;\n}\n.fr-message--error::before, .fr-message--valid::before, .fr-message--info::before {\n  content: \"\";\n  display: inline-block;\n  margin-right: 0.25rem;\n  margin-top: 0.125rem;\n}\n.fr-message--error::before {\n  -webkit-mask-image: url(\"../../icons/system/fr--error-fill.svg\");\n  mask-image: url(\"../../icons/system/fr--error-fill.svg\");\n}\n.fr-message--valid::before {\n  -webkit-mask-image: url(\"../../icons/system/fr--success-fill.svg\");\n  mask-image: url(\"../../icons/system/fr--success-fill.svg\");\n}\n.fr-message--info::before {\n  -webkit-mask-image: url(\"../../icons/system/fr--info-fill.svg\");\n  mask-image: url(\"../../icons/system/fr--info-fill.svg\");\n}\n\n.fr-select-group--valid label, .fr-input-group--valid label, .fr-range-group--valid label, .fr-upload-group--valid label {\n  color: var(--text-default-success);\n}\n.fr-select-group--error label, .fr-input-group--error label, .fr-range-group--error label, .fr-upload-group--error label {\n  color: var(--text-default-error);\n}\n.fr-select-group--info label, .fr-input-group--info label, .fr-range-group--info label, .fr-upload-group--info label {\n  color: var(--text-default-info);\n}\n.fr-select-group--disabled label,\n.fr-select-group--disabled .fr-hint-text, .fr-input-group--disabled label,\n.fr-input-group--disabled .fr-hint-text, .fr-range-group--disabled label,\n.fr-range-group--disabled .fr-hint-text, .fr-upload-group--disabled label,\n.fr-upload-group--disabled .fr-hint-text {\n  color: var(--text-disabled-grey);\n}\n\n.fr-label {\n  color: var(--text-label-grey);\n}\n.fr-label--error {\n  color: var(--text-default-error);\n}\n.fr-label--success {\n  color: var(--text-default-success);\n}\n.fr-label--info {\n  color: var(--text-default-info);\n}\n.fr-label--disabled, .fr-label--disabled .fr-hint-text {\n  color: var(--text-disabled-grey);\n}\n\n.fr-hint-text,\n.fr-message {\n  color: var(--text-mention-grey);\n}\n\n.fr-message--error {\n  color: var(--text-default-error);\n}\n.fr-message--valid {\n  color: var(--text-default-success);\n}\n.fr-message--info {\n  color: var(--text-default-info);\n}\n\n.fr-fieldset:disabled .fr-label,\n.fr-fieldset:disabled .fr-hint-text,\n.fr-fieldset:disabled .fr-fieldset__legend {\n  color: var(--text-disabled-grey);\n}\n\n.fr-fieldset input:disabled + label,\n.fr-fieldset input:disabled + label .fr-hint-text,\n.fr-fieldset input:disabled + label + .fr-hint-text {\n  color: var(--text-disabled-grey);\n}\n\n.fr-fieldset__legend {\n  color: var(--text-label-grey);\n}\n.fr-fieldset--error, .fr-fieldset--error .fr-fieldset__legend {\n  background-image: linear-gradient(0deg, var(--border-plain-error), var(--border-plain-error));\n}\n.fr-fieldset--error .fr-fieldset__legend, .fr-fieldset--error .fr-label {\n  color: var(--text-default-error);\n}\n.fr-fieldset--valid, .fr-fieldset--valid .fr-fieldset__legend {\n  background-image: linear-gradient(0deg, var(--border-plain-success), var(--border-plain-success));\n}\n.fr-fieldset--valid .fr-fieldset__legend, .fr-fieldset--valid .fr-label {\n  color: var(--text-default-success);\n}\n.fr-fieldset--info, .fr-fieldset--info .fr-fieldset__legend {\n  background-image: linear-gradient(0deg, var(--border-plain-info), var(--border-plain-info));\n}\n.fr-fieldset--info .fr-fieldset__legend, .fr-fieldset--info .fr-label {\n  color: var(--text-default-info);\n}\n\n.fr-select-group:not(:last-child), .fr-input-group:not(:last-child) {\n  margin-bottom: 1.5rem;\n}\n.fr-select-group .fr-label .fr-hint-text, .fr-input-group .fr-label .fr-hint-text {\n  margin-top: 0.25rem;\n}\n\n.fr-fieldset--inline .fr-fieldset__content {\n  display: flex;\n  align-items: baseline;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  margin: -0.75rem 0.5rem 0 0.5rem;\n}\n.fr-fieldset--inline .fr-checkbox-group {\n  display: inline-flex;\n  margin-bottom: 0;\n}\n.fr-fieldset--inline .fr-checkbox-group:first-child {\n  margin-top: 0;\n}\n.fr-fieldset--inline .fr-checkbox-group:not(:last-child) {\n  margin-right: 1.25rem;\n}\n.fr-fieldset--inline .fr-checkbox-group:last-child {\n  margin-bottom: 0;\n}\n.fr-fieldset--inline .fr-radio-group {\n  display: inline-flex;\n}\n.fr-fieldset--inline .fr-radio-group:not(:last-child) {\n  margin-right: 1.75rem;\n}\n.fr-fieldset--inline .fr-radio-group:first-child {\n  margin-top: 0;\n}\n.fr-fieldset--inline .fr-radio-group:last-child {\n  margin-bottom: 0;\n}\n.fr-fieldset__content {\n  position: relative;\n  margin: 0 0.5rem;\n  width: 100%;\n}\n.fr-fieldset__content .fr-radio-group:first-child,\n.fr-fieldset__content .fr-checkbox-group:first-child {\n  margin-top: -0.75rem;\n}\n.fr-fieldset__content .fr-radio-group label,\n.fr-fieldset__content .fr-checkbox-group label {\n  padding: 0.75rem 0;\n}\n.fr-fieldset__content .fr-radio-group:not(.fr-radio-rich) input[type=radio] + label::before,\n.fr-fieldset__content .fr-checkbox-group input[type=checkbox] + label::before {\n  top: 0.75rem;\n}\n.fr-fieldset__content + .fr-error-text, .fr-fieldset__content + .fr-valid-text, .fr-fieldset__content + .fr-info-text {\n  margin-top: 0;\n  margin-left: 0.5rem;\n  margin-bottom: 1rem;\n}\n\n.fr-error-text,\n.fr-valid-text,\n.fr-info-text {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  font-size: 0.75rem;\n  line-height: 1.25rem;\n  margin-top: 1rem;\n  margin-bottom: 0;\n}\n.fr-error-text::before,\n.fr-valid-text::before,\n.fr-info-text::before {\n  flex: 0 0 auto;\n  display: inline-block;\n  vertical-align: calc((0.75em - var(--icon-size)) * 0.5);\n  background-color: currentColor;\n  width: var(--icon-size);\n  height: var(--icon-size);\n  -webkit-mask-size: 100% 100%;\n  mask-size: 100% 100%;\n}\n.fr-error-text::before,\n.fr-valid-text::before,\n.fr-info-text::before {\n  --icon-size: 1rem;\n}\n.fr-error-text::before,\n.fr-valid-text::before,\n.fr-info-text::before {\n  content: \"\";\n  display: inline-block;\n  margin-right: 0.25rem;\n}\n.fr-error-text + .fr-error-text, .fr-error-text + .fr-valid-text, .fr-error-text + .fr-info-text,\n.fr-valid-text + .fr-error-text,\n.fr-valid-text + .fr-valid-text,\n.fr-valid-text + .fr-info-text,\n.fr-info-text + .fr-error-text,\n.fr-info-text + .fr-valid-text,\n.fr-info-text + .fr-info-text {\n  margin-top: 0.25rem;\n}\n\n.fr-error-text::before {\n  -webkit-mask-image: url(\"../../icons/system/fr--error-fill.svg\");\n  mask-image: url(\"../../icons/system/fr--error-fill.svg\");\n}\n\n.fr-valid-text::before {\n  -webkit-mask-image: url(\"../../icons/system/fr--success-fill.svg\");\n  mask-image: url(\"../../icons/system/fr--success-fill.svg\");\n}\n\n.fr-info-text::before {\n  -webkit-mask-image: url(\"../../icons/system/fr--info-fill.svg\");\n  mask-image: url(\"../../icons/system/fr--info-fill.svg\");\n}\n\n.fr-error-text {\n  color: var(--text-default-error);\n}\n\n.fr-valid-text {\n  color: var(--text-default-success);\n}\n\n.fr-info-text {\n  color: var(--text-default-info);\n}\n\n.fr-fieldset--valid .fr-fieldset__content::before {\n  box-shadow: inset 2px 0 0 0 var(--border-plain-success);\n}\n.fr-fieldset--error .fr-fieldset__content::before {\n  box-shadow: inset 2px 0 0 0 var(--border-plain-error);\n}\n.fr-fieldset--info .fr-fieldset__content::before {\n  box-shadow: inset 2px 0 0 0 var(--border-plain-info);\n}\n\n@media (min-width: 36em) {\n  /*! media sm */\n}\n@media (min-width: 48em) {\n  /*! media md */\n}\n@media (min-width: 62em) {\n  /*! media lg */\n}\n@media (min-width: 78em) {\n  /*! media xl */\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-fieldset__legend {\n    max-width: 100%;\n  }\n  .fr-message--error::before, .fr-message--error::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-message--error::before, .fr-message--error::after {\n    background-image: url(\"../../icons/system/fr--error-fill.svg\");\n  }\n  .fr-message--error::before, .fr-message--error::after {\n    width: 1rem;\n    height: 1rem;\n  }\n  .fr-message--valid::before, .fr-message--valid::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-message--valid::before, .fr-message--valid::after {\n    background-image: url(\"../../icons/system/fr--success-fill.svg\");\n  }\n  .fr-message--valid::before, .fr-message--valid::after {\n    width: 1rem;\n    height: 1rem;\n  }\n  .fr-message--info::before, .fr-message--info::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-message--info::before, .fr-message--info::after {\n    background-image: url(\"../../icons/system/fr--info-fill.svg\");\n  }\n  .fr-message--info::before, .fr-message--info::after {\n    width: 1rem;\n    height: 1rem;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-select-group--valid label, .fr-input-group--valid label, .fr-range-group--valid label, .fr-upload-group--valid label {\n    color: #18753c;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-select-group--error label, .fr-input-group--error label, .fr-range-group--error label, .fr-upload-group--error label {\n    color: #ce0500;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-select-group--info label, .fr-input-group--info label, .fr-range-group--info label, .fr-upload-group--info label {\n    color: #0063cb;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-select-group--disabled label,\n  .fr-select-group--disabled .fr-hint-text, .fr-input-group--disabled label,\n  .fr-input-group--disabled .fr-hint-text, .fr-range-group--disabled label,\n  .fr-range-group--disabled .fr-hint-text, .fr-upload-group--disabled label,\n  .fr-upload-group--disabled .fr-hint-text {\n    color: #929292;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-label {\n    color: #161616;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-label--error {\n    color: #ce0500;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-label--success {\n    color: #18753c;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-label--info {\n    color: #0063cb;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-label--disabled, .fr-label--disabled .fr-hint-text {\n    color: #929292;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-hint-text,\n  .fr-message {\n    color: #666;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-message--error {\n    color: #ce0500;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-message--valid {\n    color: #18753c;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-message--info {\n    color: #0063cb;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-fieldset:disabled .fr-label,\n  .fr-fieldset:disabled .fr-hint-text,\n  .fr-fieldset:disabled .fr-fieldset__legend {\n    color: #929292;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-fieldset input:disabled + label,\n  .fr-fieldset input:disabled + label .fr-hint-text,\n  .fr-fieldset input:disabled + label + .fr-hint-text {\n    color: #929292;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-fieldset__legend {\n    color: #161616;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-fieldset--error, .fr-fieldset--error .fr-fieldset__legend {\n    background-image: linear-gradient(0deg, #ce0500, #ce0500);\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-fieldset--error .fr-fieldset__legend, .fr-fieldset--error .fr-label {\n    color: #ce0500;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-fieldset--valid, .fr-fieldset--valid .fr-fieldset__legend {\n    background-image: linear-gradient(0deg, #18753c, #18753c);\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-fieldset--valid .fr-fieldset__legend, .fr-fieldset--valid .fr-label {\n    color: #18753c;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-fieldset--info, .fr-fieldset--info .fr-fieldset__legend {\n    background-image: linear-gradient(0deg, #0063cb, #0063cb);\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-fieldset--info .fr-fieldset__legend, .fr-fieldset--info .fr-label {\n    color: #0063cb;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-error-text::before, .fr-error-text::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-error-text::before, .fr-error-text::after {\n    background-image: url(\"../../icons/system/fr--error-fill.svg\");\n  }\n  .fr-error-text::before, .fr-error-text::after {\n    width: 1rem;\n    height: 1rem;\n  }\n  .fr-valid-text::before, .fr-valid-text::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-valid-text::before, .fr-valid-text::after {\n    background-image: url(\"../../icons/system/fr--success-fill.svg\");\n  }\n  .fr-valid-text::before, .fr-valid-text::after {\n    width: 1rem;\n    height: 1rem;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-error-text {\n    color: #ce0500;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-valid-text {\n    color: #18753c;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-info-text {\n    color: #0063cb;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-fieldset--valid .fr-fieldset__content::before {\n    box-shadow: inset 2px 0 0 0 #18753c;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-fieldset--error .fr-fieldset__content::before {\n    box-shadow: inset 2px 0 0 0 #ce0500;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-fieldset--info .fr-fieldset__content::before {\n    box-shadow: inset 2px 0 0 0 #0063cb;\n  }\n}\n\n@media print {\n  .fr-select-group--valid label, .fr-input-group--valid label, .fr-range-group--valid label, .fr-upload-group--valid label {\n    color: #18753c;\n  }\n  .fr-select-group--error label, .fr-input-group--error label, .fr-range-group--error label, .fr-upload-group--error label {\n    color: #ce0500;\n  }\n  .fr-select-group--info label, .fr-input-group--info label, .fr-range-group--info label, .fr-upload-group--info label {\n    color: #0063cb;\n  }\n  .fr-select-group--disabled label,\n  .fr-select-group--disabled .fr-hint-text, .fr-input-group--disabled label,\n  .fr-input-group--disabled .fr-hint-text, .fr-range-group--disabled label,\n  .fr-range-group--disabled .fr-hint-text, .fr-upload-group--disabled label,\n  .fr-upload-group--disabled .fr-hint-text {\n    color: #929292;\n  }\n  .fr-label {\n    color: #161616;\n  }\n  .fr-label--error {\n    color: #ce0500;\n  }\n  .fr-label--success {\n    color: #18753c;\n  }\n  .fr-label--info {\n    color: #0063cb;\n  }\n  .fr-label--disabled, .fr-label--disabled .fr-hint-text {\n    color: #929292;\n  }\n  .fr-hint-text,\n  .fr-message {\n    color: #666;\n  }\n  .fr-message--error {\n    color: #ce0500;\n  }\n  .fr-message--valid {\n    color: #18753c;\n  }\n  .fr-message--info {\n    color: #0063cb;\n  }\n  .fr-fieldset:disabled .fr-label,\n  .fr-fieldset:disabled .fr-hint-text,\n  .fr-fieldset:disabled .fr-fieldset__legend {\n    color: #929292;\n  }\n  .fr-fieldset input:disabled + label,\n  .fr-fieldset input:disabled + label .fr-hint-text,\n  .fr-fieldset input:disabled + label + .fr-hint-text {\n    color: #929292;\n  }\n  .fr-fieldset__legend {\n    color: #161616;\n  }\n  .fr-fieldset--error, .fr-fieldset--error .fr-fieldset__legend {\n    background-image: linear-gradient(0deg, #ce0500, #ce0500);\n  }\n  .fr-fieldset--error .fr-fieldset__legend, .fr-fieldset--error .fr-label {\n    color: #ce0500;\n  }\n  .fr-fieldset--valid, .fr-fieldset--valid .fr-fieldset__legend {\n    background-image: linear-gradient(0deg, #18753c, #18753c);\n  }\n  .fr-fieldset--valid .fr-fieldset__legend, .fr-fieldset--valid .fr-label {\n    color: #18753c;\n  }\n  .fr-fieldset--info, .fr-fieldset--info .fr-fieldset__legend {\n    background-image: linear-gradient(0deg, #0063cb, #0063cb);\n  }\n  .fr-fieldset--info .fr-fieldset__legend, .fr-fieldset--info .fr-label {\n    color: #0063cb;\n  }\n  .fr-hint-text,\n  .fr-message {\n    font-size: 1rem;\n    line-height: 1.5rem;\n  }\n}","////\n/// Form Main\n/// @group form\n////\n\n/* ¯¯¯¯¯¯¯¯¯ *\\\n  FORM\n\\* ˍˍˍˍˍˍˍˍˍ */\n\n@use 'module/path';\n@use 'module/shame/media-query';\n\n@include path.to-dist(2);\n@include media-query.order;\n\n@import 'index';\n@import 'style/module';\n@import 'style/scheme';\n\n@include _form-scheme;\n\n// deprecated\n@import 'deprecated/style/module';\n@import 'deprecated/style/scheme';\n\n@include _deprecated-form-scheme;\n","#{ns(label)} {\n  display: block;\n  @include text-style(md);\n\n  & + #{ns(input)},\n  & + #{ns(input-wrap)},\n  & + #{ns(select)} {\n    @include margin-top(2v);\n  }\n}\n","////\n/// Core Tool : Typography build\n/// @group core\n////\n\n@use 'module/spacing';\n\n@function get-text-style($font-size) {\n  @return map-get($text-styles, $font-size);\n}\n\n@function get-title-style($font-size) {\n  @return map-get($title-styles, $font-size);\n}\n\n@mixin _stylize($font-size, $styles, $prepend, $append) {\n  $style: map-get($styles, $font-size);\n\n  @if $prepend == null {\n    $prepend: '';\n  }\n\n  @if $append == null {\n    $append: '';\n  }\n\n  font-size: #{$prepend} spacing.space($font-size) #{$append};\n\n  @if map-has-key($style, line-height) {\n    line-height: #{$prepend} spacing.space(map-get($style, line-height)) #{$append};\n  }\n}\n\n@mixin _responsive-styles($settings, $styles, $is-responsive, $prepend, $append) {\n  $breakpoints: map-get($settings, breakpoints);\n\n  @if map-has-key($settings, weight) {\n    font-weight: #{$prepend} map-get($font-weight-scale, map-get($settings, weight)) #{$append};\n  }\n\n  @if $is-responsive {\n    @each $breakpoint, $size in $breakpoints {\n      @if $breakpoint == first {\n        @include _stylize($size, $styles, $prepend, $append);\n      }\n      @else {\n        @include respond-from($breakpoint) {\n          @include _stylize($size, $styles, $prepend, $append);\n        }\n      }\n    }\n  }\n  @else {\n    @if map-has-key($breakpoints, md) {\n      @include _stylize(map-get($breakpoints, md), $styles);\n    }\n    @else {\n      @include _stylize(map-get($breakpoints, first), $styles);\n    }\n  }\n}\n\n@mixin _space-text($settings) {\n  @include margin( var(#{'--' + map-get($settings, 'margin') + '-spacing'}) );\n}\n\n@mixin text-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($text-settings, $name);\n  @if $settings {\n    $append: '';\n    @if $important {\n      $append: ' !important';\n    }\n\n    @include _responsive-styles($settings, $text-styles, $is-responsive, $prepend, $append);\n\n    @if $with-spacing {\n      @include _space-text($settings);\n    }\n  }\n}\n\n@mixin title-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($title-settings, $name);\n  @if $settings {\n    $append: '';\n    @if $important {\n      $append: ' !important';\n    }\n\n    @include _responsive-styles($settings, $title-styles, $is-responsive, $prepend, $append);\n\n    @if $with-spacing {\n      @include _space-text($settings);\n    }\n  }\n}\n\n@mixin _set-typography-var($name, $value, $bp: null) {\n  @if $bp != null {\n    @include respond-from(#{$bp}) {\n      --#{$name}-spacing: #{space($value)};\n    }\n  }\n  @else {\n    --#{$name}-spacing: #{space($value)};\n  }\n}\n\n@mixin set-title-margin($margin, $bp:null) {\n  @include _set-typography-var(title, $margin, $bp);\n}\n\n@mixin set-text-margin($margin, $bp:null) {\n  @include _set-typography-var(text, $margin, $bp);\n}\n\n@mixin set-display-margin($margin, $bp:null) {\n  @include _set-typography-var(display, $margin, $bp);\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'module/legacy';\n@use 'module/media-query';\n@use 'module/spacing';\n@use 'module/specificity';\n@use 'module/string';\n@use 'module/utilities';\n@use '../variable/constant';\n@use '../function/box-shadow' as bs;\n@use '../function/colors';\n@use '../function/result';\n@use '../function/token';\n\n$COLOR: constant.$value;\n\n@mixin element($prop, $context, $tokens, $options: (), $value: $COLOR) {\n  $legacy: map.get($options, legacy);\n  $important: map.get($options, important);\n  $hover: map.get($options, hover);\n  $standalone: map.get($options, standalone);\n\n  $legacy-target: null;\n  @if $legacy == true {\n    $legacy-target: ie11;\n  }\n\n  $tokens: token.normalise($tokens, $context);\n  $type: decision;\n  $options: (var: true);\n\n  @if $legacy or $standalone {\n    $type: hex;\n    $option: (theme: light);\n  }\n\n  $colors: colors.from-list($tokens, $type, $options);\n  $result: result.get($colors, $value);\n  $result: specificity.important($result, $important);\n\n  @include legacy.is($legacy-target) {\n    #{$prop}: #{string.unstringify($result)};\n  }\n\n  @if ($hover == true or ($hover == inherit and $legacy == false)) and ($context == background and list.length($tokens) == 1) {\n\n    $token: nth($tokens, 1);\n    @if $legacy or $standalone {\n      @include _apply-pseudos($token, false, true, $legacy-target, $prop, $value, $important);\n    }\n    @else {\n      @if $prop == background-color {\n        --idle: transparent; // #{$result};\n        @include _apply-pseudos($token, true, false, null, $prop, $value, $important);\n      }\n      @else {\n        @include _apply-pseudos($token, true, true, null, $prop, $value, $important);\n      }\n    }\n  }\n}\n\n@mixin _apply-pseudos($token, $decision: true, $pseudo: false, $target: null, $prop: background-color, $value: constant.$value, $important: false) {\n  @include legacy.is($target) {\n    @include _apply-pseudo($token, hover, $decision, $pseudo, $prop, $value, $important);\n    @include _apply-pseudo($token, active, $decision, $pseudo, $prop, $value, $important);\n  }\n}\n\n@mixin _apply-pseudo($token, $type, $decision: true, $pseudo: false, $prop: background-color, $value: constant.$value, $important: false) {\n  $nest: null;\n  $p: --#{$type};\n  @if $pseudo {\n    $nest: '&:#{$type}';\n    $p: $prop;\n  }\n\n  $t: hex;\n  $options: (#{$type}: true);\n  @if $decision {\n    $t: decision;\n    $options: (var: true, #{$type}: true);\n  }\n\n  $color: colors.from($token, $t, $options);\n  $result: result.get($color, $value);\n  $result: specificity.important($result, $important);\n\n  @include utilities.nest($nest) {\n    #{$p}: #{string.unstringify($result)};\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin background($tokens, $options:()) {\n  @if not map.has-key($options, hover) {\n    $options: map.merge($options, (hover: inherit));\n  }\n  @include element(background-color, background, $tokens, $options);\n}\n\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - hover {boolean}: si true, surcharge la valeur de blend pour être héritée\n@mixin transparent-background($options) {\n  $legacy: map.get($options, legacy);\n  $important: map.get($options, important);\n  $hover: map.get($options, hover);\n  $tokens: token.normalise(default grey, background);\n  $value: specificity.important(transparent, $important);\n\n  @if $legacy {\n    @include legacy.is(ie11) {\n      background-color: transparent;\n\n      @if $hover {\n        &:hover {\n          background-color: rgba(0, 0, 0, 0.05);\n        }\n\n        &:active {\n          background-color: rgba(0, 0, 0, 0.1);\n        }\n      }\n    }\n  }\n  @else {\n    background-color: #{$value};\n    @if $hover {\n      --hover: inherit;\n      --active: inherit;\n    }\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin background-image($tokens, $options, $value: linear-gradient(0deg, $COLOR, $COLOR)) {\n  $d: token.length($tokens);\n  @if $d > 1 and $value == linear-gradient(0deg, $COLOR, $COLOR) {\n    $transformed: ();\n    @for $i from 1 through $d {\n      $c: string.unquote('$color##{$i}');\n      $transformed: list.append($transformed, linear-gradient(0deg, $c, $c), comma);\n    }\n    $value: $transformed;\n  }\n  @include element(background-image, background, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin text($tokens, $options) {\n  @include element(color, text, $tokens, $options);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin text-fill($tokens, $options) {\n  @include element(-webkit-text-fill-color, text, $tokens, $options);\n}\n\n/// Ajout d'une couleur de fill sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin fill($tokens, $options) {\n  @include element(fill, background , $tokens, $options);\n}\n\n/// Ajout d'une couleur de border sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - side {String}: le côté affecté. valeurs: top, right, bottom, left\n/// @param {List} $value - définition des propriétés de border\n@mixin border($tokens, $options, $value:1px solid $COLOR) {\n  $prop:border;\n  @if map.has-key($options, side) {\n    $prop:border-#{map.get($options, side)};\n  }\n  @include element($prop, border, $tokens, $options, $value);\n}\n\n@mixin no-border($options: ()) {\n  $breakpoint: map.get($options, breakpoint);\n  $legacy: map.get($options, legacy);\n  @include media-query.respond-from($breakpoint) {\n    @if $legacy {\n      @include legacy.is(ie11) {\n        border: 0;\n      }\n    }\n    @else {\n      border: 0;\n    }\n  }\n}\n\n/// Ajout d'une couleur d'outline sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés d'outline\n@mixin outline($tokens, $options, $value:1px solid $COLOR) {\n  @include element(outline, border, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de box-shadow sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés de box-shadow\n@mixin box-shadow($tokens, $options, $value: all-1-in) {\n  $has-keys: true;\n  $transformed: ();\n  $d: token.length($tokens);\n  $i: 1;\n  @each $v in $value {\n    @if bs.has($v) {\n      $transformed: append($transformed, bs.get($v, $i), comma);\n      @if $i < $d {\n        $i: $i + 1;\n      }\n    }\n    @else {\n      $has-keys: false;\n    }\n  }\n  @if $has-keys {\n    $value: $transformed;\n  }\n  @include element(box-shadow, border, $tokens, $options, spacing.space($value));\n}\n\n/// Supprime la shadow-box sur l'élément\n/// @access public\n/// @param {string} $breakpoint - la shadow-box est retiré à partir d'un breakpoint si celui-ci est défini\n@mixin no-box-shadow($options) {\n  $breakpoint: map.get($options, breakpoint);\n  $legacy: map.get($options, legacy);\n  @include media-query.respond-from($breakpoint) {\n    @if $legacy {\n      @include legacy.is(ie11) {\n        box-shadow: none;\n      }\n    }\n    @else {\n      box-shadow: none;\n    }\n  }\n}\n","////\n/// Core Tool : Spacing space\n/// @group core\n////\n\n@use 'module/spacing';\n\n/// Set space property\n///\n/// @param {String} $property ['margin'] - propriété à appliquer à l'espacement `['margin', 'padding']`\n/// @param {Number | list} $value [2] - valeur de l'espacement en v ou w. peut être une liste si la direction n'est pas renseignée\n/// @param {String} $direction - direction de l'espacement `['x', 'y', 'top', 'right', 'bottom', 'left']`\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     @include _spacing('margin', 6v, 'bottom');\n///   }\n@mixin _spacing($property: margin, $value: 0, $direction: null) {\n  $v: spacing.space($value);\n  @if $direction != null {\n    @if $direction == 'x' {\n      #{$property}-left: $v;\n      #{$property}-right: $v;\n    }\n    @else if $direction == 'y' {\n      #{$property}-top: $v;\n      #{$property}-bottom: $v;\n    }\n    @else {\n      #{$property}-#{$direction}: $v;\n    }\n  }\n  @else {\n    #{$property}: $v;\n  }\n}\n\n@mixin _spacing-from($property: margin, $value: 0, $direction: null, $from: null) {\n  @include respond-from($from) {\n    @include _spacing($property, $value, $direction);\n  }\n}\n\n@mixin padding($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(padding, $values, null, $from);\n}\n\n@mixin padding-x($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'x', $from);\n}\n\n@mixin padding-y($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'y', $from);\n}\n\n@mixin padding-top($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'top', $from);\n}\n\n@mixin padding-right($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'right', $from);\n}\n\n@mixin padding-bottom($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'bottom', $from);\n}\n\n@mixin padding-left($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'left', $from);\n}\n\n@mixin margin($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(margin, $values, null, $from);\n}\n\n@mixin margin-x($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'x', $from);\n}\n\n@mixin margin-y($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'y', $from);\n}\n\n@mixin margin-top($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'top', $from);\n}\n\n@mixin margin-right($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'right', $from);\n}\n\n@mixin margin-bottom($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'bottom', $from);\n}\n\n@mixin margin-left($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'left', $from);\n}\n","#{ns(hint-text)} {\n  display: block;\n  // @include margin-bottom(0);\n  @include text-style(xs);\n  @include set-text-margin(0 0 4v);\n\n  & + #{ns(hint-text)} {\n    @include margin-top(1v);\n  }\n}\n","@use '../../../../../module/spacing';\n\n#{ns(fieldset)} {\n  @include relative;\n  @include margin(0 -3v 4v);\n  @include padding(0 1v);\n  @include display-flex(row, flex-end, null, wrap);\n  border: 0;\n\n  &__legend {\n    @include padding-bottom(4v);\n    @include padding-x(3v);\n    @include margin-x(-1v);\n    @include text-style(md);\n    @include font-weight(bold);\n    @include width(100%);\n\n    &--regular {\n      @include font-weight(regular);\n    }\n\n    #{ns(hint-text)} {\n      @include margin-top(2v);\n      @include font-weight(regular);\n    }\n  }\n\n  &--valid,\n  &--error,\n  &--info {\n    background-repeat: no-repeat;\n    background-position: 0 spacing.space(-9v);\n    background-size: spacing.space(2px calc(100% + (5v)));\n  }\n\n  &--valid &__legend,\n  &--error &__legend,\n  &--info &__legend {\n    background-repeat: no-repeat;\n    background-position: 0 0;\n    background-size: 2px 100%;\n  }\n\n  &__element {\n    flex: 1 1 100%;\n    @include max-width(100%);\n    @include padding-x(2v);\n    @include margin-bottom(4v);\n\n    &--inline {\n      flex: 0 0 auto;\n\n      &\\@md {\n        @include respond-from(md) {\n          flex: 0 0 auto;\n        }\n      }\n\n      &-grow,\n      &\\@md#{&}-grow {\n        flex-grow: 1;\n      }\n    }\n\n    $year-width: 32v;\n\n    &--year {\n      flex: space(0 0 #{$year-width});\n    }\n\n    &--year:not(&--inline) {\n      @include margin-right(calc(100% - #{$year-width}));\n    }\n\n    $postal-width: 64v;\n\n    &--postal {\n      flex: space(0 0 #{$postal-width});\n    }\n\n    &--postal:not(&--inline) {\n      @include margin-right(calc(100% - #{$postal-width}));\n    }\n\n    $number-width: 24v;\n\n    &--number {\n      flex: space(0 0 #{$number-width});\n    }\n\n    &--number:not(&--inline) {\n      @include margin-right(calc(100% - #{$number-width}));\n    }\n  }\n\n  &__legend,\n  &__element {\n    > h1,\n    > h2,\n    > h3,\n    > h4,\n    > h5,\n    > h6,\n    > p,\n    > #{ns(fieldset)} {\n      &:last-child {\n        @include after('', block) {\n          @include margin-bottom(-4v);\n        }\n      }\n    }\n  }\n\n  > #{ns(messages-group)} {\n    flex: 1 1 100%;\n    @include padding-x(2v);\n\n    > #{ns(message)}:last-child {\n      @include margin-bottom(4v);\n    }\n  }\n}\n","////\n/// Core Tool : Spacing position\n/// @group core\n////\n\n@use 'module/spacing';\n\n@mixin position($position, $top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  position: #{$position};\n  @if $top != null {\n    top: #{space($top)};\n  }\n  @if $right != null {\n    right: #{space($right)};\n  }\n  @if $bottom != null {\n    bottom: #{space($bottom)};\n  }\n  @if $left != null {\n    left: #{space($left)};\n  }\n\n  @include size($width, $height);\n\n  @content;\n}\n\n@mixin relative($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(relative, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin absolute($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(absolute, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin fixed($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(fixed, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin sticky($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(sticky, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin top($top) {\n  top: spacing.space($top);\n}\n\n@mixin right($top) {\n  right: spacing.space($top);\n}\n\n@mixin bottom($top) {\n  bottom: spacing.space($top);\n}\n\n@mixin left($top) {\n  left: spacing.space($top);\n}\n","////\n/// Core Tool : Display display\n/// @group core\n////\n\n@mixin display-flex($flex-direction: row, $align-items: null, $justify-content: null, $flex-wrap: null, $inline: false) {\n\n  @if $inline == true {\n    display: inline-flex;\n  }\n  @else {\n    display: flex;\n  }\n\n  @if $flex-direction != null {\n    flex-direction: #{$flex-direction};\n  }\n\n  @if $align-items != null {\n    align-items: #{$align-items};\n  }\n\n  @if $justify-content != null {\n    justify-content: #{$justify-content};\n  }\n\n  @if $flex-wrap != null {\n    flex-wrap: #{$flex-wrap};\n  }\n}\n","////\n/// Core Tool : Typography font-weight\n/// @group core\n////\n\n/// Return font-weight value from font-weight map.\n///\n/// @param {String} $scale ['regular'] - Type scale value from `$weight-scale` (Default to 'regular' = 400)\n///\n/// @example scss - Set font-weight to bold (700)\n///   .foo {\n///     font-weight: font-weight('bold');\n///   }\n\n@function font-weight($scale: regular) {\n  @return map-get($font-weight-scale, $scale);\n}\n\n@mixin font-weight($scale) {\n  font-weight: font-weight($scale);\n}\n\n@mixin build-utillity-font-weight() {\n  $fontWeightValues: map-get($font-weight-vars, values);\n  @if $fontWeightValues == 'all' {\n    $fontWeightValues: map-keys($font-weight-names);\n  }\n  @each $weight in $fontWeightValues {\n    $name: map-get($font-weight-names, $weight);\n    #{ns('text--' + $name)} {\n      font-weight: #{$weight} !important;\n    }\n  }\n}\n","////\n/// Core Tool : Spacing size\n/// @group core\n////\n\n@use '../../../../../module/spacing';\n\n@mixin width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{spacing.space($width)};\n    }\n  }\n}\n\n@mixin min-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      min-width: #{spacing.space($width)};\n    }\n  }\n}\n\n@mixin max-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      max-width: #{spacing.space($width)};\n    }\n  }\n}\n\n@mixin height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      height: #{spacing.space($height)};\n    }\n  }\n}\n\n@mixin min-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      min-height: #{spacing.space($height)};\n    }\n  }\n}\n\n@mixin max-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      max-height: #{spacing.space($height)};\n    }\n  }\n}\n\n@mixin size($width:null, $height:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{spacing.space($width)};\n    }\n    @if $height != null {\n      height: #{spacing.space($height)};\n    }\n  }\n}\n\n@mixin min-size($min-width:null, $min-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $min-width != null {\n      min-width: #{spacing.space($min-width)};\n    }\n    @if $min-height != null {\n      min-height: #{spacing.space($min-height)};\n    }\n  }\n}\n\n@mixin max-size($max-width:null, $max-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $max-width != null {\n      max-width: #{spacing.space($max-width)};\n    }\n    @if $max-height != null {\n      max-height: #{spacing.space($max-height)};\n    }\n  }\n}\n","////\n/// Core Tool : Selector pseudo\n/// @group core\n////\n\n@mixin _pseudo($type:before, $content:null, $display:null) {\n  @if $type != after and $type != before and $type != marker and $type != (before after) {\n    @error '$type must be before or after element';\n  }\n\n  $selector: ();\n\n  @each $pseudo in $type {\n    $selector: append($selector, '&::#{$pseudo}', 'comma');\n  }\n\n  #{$selector} {\n\n    @if $content != null {\n      content: $content;\n    }\n\n    @if $display != null {\n      display: #{$display};\n    }\n\n    @content;\n  }\n}\n\n@mixin before($content: null, $display: null) {\n  @include _pseudo(before, $content, $display) {\n    @content;\n  }\n}\n\n@mixin after($content: null, $display: null) {\n  @include _pseudo(after, $content, $display) {\n    @content;\n  }\n}\n\n@mixin marker($content: null, $display: null) {\n  @include _pseudo(marker, $content, $display) {\n    @content;\n  }\n}\n","#{ns(message)} {\n  --comma: \", \";\n  --content: var(--comma);\n  @include display-flex(row, flex-start);\n  @include text-style(xs);\n  @include margin(0 0 1v 0);\n\n  @include after(var(--content)) {\n    @include sr-only();\n  }\n\n  &:last-child {\n    --comma: \". \";\n    @include margin-bottom(0);\n  }\n\n  &--error,\n  &--valid,\n  &--info {\n    @include icon(null, sm, before) {\n      display: inline-block;\n      @include margin-right(1v);\n      @include margin-top(0.5v);\n    }\n  }\n\n  &--error {\n    @include icon-image(error-fill, before);\n  }\n\n  &--valid {\n    @include icon-image(success-fill, before);\n  }\n\n  &--info {\n    @include icon-image(info-fill, before);\n  }\n}\n","////\n/// Core Tool : Display sr-only\n/// @group core\n////\n\n@mixin sr-only() {\n  @include absolute;\n  @include size(1px, 1px);\n  @include padding(0);\n  @include margin(-1px);\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap; /* added line */\n  border: 0;\n  display: block;\n}\n\n@mixin sr-only-from() {\n  @each $bp, $limits in $breakpoints {\n    @if $bp != xs {\n      #{ns('sr-only-' + $bp)} {\n        @include respond-from($bp) {\n          @include sr-only();\n        }\n      }\n    }\n  }\n}\n\n@mixin sr-only-to() {\n  @each $bp, $limits in $breakpoints {\n    @if $bp != xs {\n      #{ns('sr-only-to-' + $bp)} {\n        @include respond-to($bp) {\n          @include sr-only();\n        }\n      }\n    }\n  }\n}\n","////\n/// Core Tool : Icon default\n/// @group core\n////\n\n@use 'module/path';\n@use 'module/spacing';\n@use 'module/specificity';\n\n/// Return icon size from map\n/// @param {String} $size ['md'] - Icon size from `$icon-size-map` (Default to 'md' = 16px)\n///\n/// @example scss - Set icon size to `SM` (12px)\n///   .foo {\n///     width: icon-size(sm);\n///     height: icon-size(sm);\n///   }\n@function icon-size($size: md) {\n  @return spacing.space(map-get($icon-size-map, $size));\n}\n\n@function get-icon-url($icon, $important: false) {\n  $config: map-get($icons-config, $icon);\n  $url: url('#{path.dist()}#{map-get($config, path)}');\n  @return specificity.important($url, $important);\n}\n\n@function get-icon-pseudo($restrain) {\n  @if $restrain == before or $restrain == after {\n    @return $restrain;\n  }\n  @return before after;\n}\n\n@mixin _icon-pseudo ($restrain: null) {\n  @include _pseudo(get-icon-pseudo($restrain)) {\n    @content;\n  }\n}\n\n@mixin icon-size ($size:md, $restrain: null) {\n  @include _icon-pseudo($restrain) {\n    --icon-size: #{icon-size($size)};\n    @content;\n  }\n}\n\n@mixin icon-image ($icon, $restrain: null, $important: false) {\n  $url: get-icon-url($icon, $important);\n\n  @include _icon-pseudo($restrain) {\n    @include mask-image($url);\n  }\n}\n\n@mixin icon-style($restrain: null) {\n  @include _icon-pseudo($restrain) {\n    flex: 0 0 auto;\n    display: inline-block;\n    vertical-align: calc((0.75em - var(--icon-size)) * 0.5);\n    background-color: currentColor;\n    @include size(var(--icon-size), var(--icon-size));\n    @include mask-image-size(100% 100%);\n    @content;\n  }\n}\n\n@mixin icon-content($is-before: true, $override: false) {\n  $pseudos: before after;\n  @if not $is-before {\n    $pseudos: after before;\n  }\n  @include _pseudo(nth($pseudos, 1), '') {\n    @content;\n  }\n  @if $override {\n    @include _pseudo(nth($pseudos, 2), none);\n  }\n}\n\n@mixin icon($icon: null, $size: md, $restrain: null, $styling: true, $is-before: $restrain != after, $override: false) {\n  @if $styling {\n    @include icon-style($restrain);\n  }\n\n  @if $icon != null {\n    @include icon-image($icon, $restrain);\n  }\n\n  @if $size != null {\n    @include icon-size($size, $restrain);\n  }\n\n  @if $is-before != null {\n    @include icon-content($is-before, $override) {\n      @content;\n    }\n  }\n}\n\n@function filter-icons($category, $config: $icons-config) {\n  $filtered: ();\n  @each $icon, $setting in $config {\n    @if map-get($setting, category) == $category {\n      $filtered: map-merge($filtered, (#{$icon}: $setting));\n    }\n  }\n  @return $filtered;\n}\n\n@mixin generate-icons($config: $icons-config) {\n  @each $icon, $setting in $config {\n    #{ns(icon-#{$icon})} {\n      @include icon-image($icon);\n    }\n  }\n}\n","////\n/// Core Tool : mask-image\n/// @group core\n////\n\n@mixin mask-image($value) {\n  -webkit-mask-image: $value;\n  mask-image: $value;\n}\n\n@mixin mask-image-size($value) {\n  -webkit-mask-size: $value;\n  mask-size: $value;\n}\n\n@mixin mask-image-position($value) {\n  -webkit-mask-position: $value;\n  mask-position: $value;\n}\n\n@mixin mask-image-repeat($value) {\n  -webkit-mask-repeat: $value;\n  mask-repeat: $value;\n}\n","////\n/// form Scheme\n/// @group form\n////\n\n@use 'module/color';\n@use 'module/disabled';\n\n@mixin _form-scheme($legacy: false) {\n  #{ns-group(select), ns-group(input), ns-group(range), ns-group(upload)} {\n    &--valid {\n      label {\n        @include color.text(default success, (legacy:$legacy));\n      }\n    }\n\n    &--error {\n      label {\n        @include color.text(default error, (legacy:$legacy));\n      }\n    }\n\n    &--info {\n      label {\n        @include color.text(default info, (legacy:$legacy));\n      }\n    }\n\n    &--disabled {\n      label,\n      #{ns(hint-text)} {\n        @include disabled.colors((legacy: $legacy, text: true));\n      }\n    }\n  }\n\n  #{ns(label)} {\n    @include color.text(label grey, (legacy:$legacy));\n\n    &--error {\n      @include color.text(default error, (legacy:$legacy));\n    }\n\n    &--success {\n      @include color.text(default success, (legacy:$legacy));\n    }\n\n    &--info {\n      @include color.text(default info, (legacy:$legacy));\n    }\n\n    &--disabled {\n      &,\n      & #{ns(hint-text)} {\n        @include disabled.colors((legacy: $legacy, text: true));\n      }\n    }\n  }\n\n  #{ns(hint-text)},\n  #{ns(message)} {\n    @include color.text(mention grey, (legacy:$legacy));\n  }\n\n  #{ns(message)} {\n    &--error {\n      @include color.text(default error, (legacy:$legacy));\n    }\n\n    &--valid {\n      @include color.text(default success, (legacy:$legacy));\n    }\n\n    &--info {\n      @include color.text(default info, (legacy:$legacy));\n    }\n  }\n\n  #{ns(fieldset)} {\n    @include disabled.selector {\n      #{ns(label)},\n      #{ns(hint-text)},\n      #{ns(fieldset__legend)} {\n        @include disabled.colors((legacy: $legacy, text: true));\n      }\n    }\n\n    input {\n      @include disabled.selector {\n        + label,\n        + label #{ns(hint-text)},\n        + label + #{ns(hint-text)} {\n          @include disabled.colors((legacy: $legacy, text: true));\n        }\n      }\n    }\n\n    &__legend {\n      @include color.text(label grey, (legacy:$legacy));\n    }\n\n    &--error,\n    &--error &__legend {\n      @include color.background-image(border plain error, (legacy:$legacy));\n    }\n\n    &--error &__legend,\n    &--error #{ns(label)} {\n      @include color.text(default error, (legacy:$legacy));\n    }\n\n    &--valid,\n    &--valid &__legend {\n      @include color.background-image(border plain success, (legacy:$legacy));\n    }\n\n    &--valid &__legend,\n    &--valid #{ns(label)} {\n      @include color.text(default success, (legacy:$legacy));\n    }\n\n    &--info,\n    &--info &__legend {\n      @include color.background-image(border plain info, (legacy:$legacy));\n    }\n\n    &--info &__legend,\n    &--info #{ns(label)} {\n      @include color.text(default info, (legacy:$legacy));\n    }\n  }\n}\n","////\n/// Form Module DEPRECATED\n/// @group form\n////\n\n#{ns-group(select), ns-group(input)} {\n  &:not(:last-child) {\n    @include margin-bottom(6v);\n  }\n\n  #{ns(label)} {\n    #{ns(hint-text)} {\n      @include margin-top(1v);\n    }\n  }\n}\n\n#{ns(fieldset)} {\n  &--inline {\n    #{ns(fieldset__content)} {\n      @include display-flex(null, baseline, flex-start, wrap);\n      @include margin(-3v 2v 0 2v);\n    }\n\n    #{ns-group(checkbox)} {\n      display: inline-flex;\n      @include margin-bottom(0);\n\n      &:first-child {\n        @include margin-top(0);\n      }\n\n      &:not(:last-child) {\n        @include margin-right(5v);\n      }\n\n      &:last-child {\n        @include margin-bottom(0);\n      }\n    }\n\n    #{ns-group(radio)} {\n      display: inline-flex;\n\n      &:not(:last-child) {\n        @include margin-right(7v);\n      }\n\n      &:first-child {\n        @include margin-top(0);\n      }\n\n      &:last-child {\n        @include margin-bottom(0);\n      }\n    }\n  }\n\n  &__content {\n    @include relative;\n    @include margin(0 2v);\n    width: 100%;\n\n    #{ns-group(radio)},\n    #{ns-group(checkbox)} {\n      &:first-child {\n        @include margin-top(-3v);\n      }\n\n      label {\n        @include padding(3v 0);\n      }\n    }\n\n    #{ns-group(radio)}:not(#{ns(radio-rich)}) input[type=\"radio\"] + label,\n    #{ns-group(checkbox)} input[type=\"checkbox\"] + label {\n      &::before {\n        top: #{space(3v)};\n      }\n    }\n\n    & + #{ns(error-text)},\n    & + #{ns(valid-text)},\n    & + #{ns(info-text)} {\n      @include margin-top(0);\n      @include margin-left(2v);\n      @include margin-bottom(4v);\n    }\n  }\n}\n\n#{ns(error-text)},\n#{ns(valid-text)},\n#{ns(info-text)} {\n  @include display-flex(row, center);\n  @include text-style(xs);\n  @include margin-top(4v);\n  @include margin-bottom(0);\n  @include icon(null, sm, before) {\n    display: inline-block;\n    @include margin-right(1v);\n  }\n\n  & + #{ns(error-text)},\n  & + #{ns(valid-text)},\n  & + #{ns(info-text)} {\n    @include margin-top(1v);\n  }\n}\n\n#{ns(error-text)} {\n  @include icon-image(error-fill, before);\n}\n\n#{ns(valid-text)} {\n  @include icon-image(success-fill, before);\n}\n\n#{ns(info-text)} {\n  @include icon-image(info-fill, before);\n}\n","////\n/// form Scheme\n/// @group form\n////\n\n@use 'module/color';\n@use 'module/disabled';\n\n@mixin _deprecated-form-scheme($legacy: false) {\n  #{ns(error-text)} {\n    @include color.text(default error, (legacy:$legacy));\n  }\n\n  #{ns(valid-text)} {\n    @include color.text(default success, (legacy:$legacy));\n  }\n\n  #{ns(info-text)} {\n    @include color.text(default info, (legacy:$legacy));\n  }\n\n  #{ns(fieldset)} {\n    &--valid {\n      #{ns(fieldset__content)} {\n        @include before {\n          @include color.box-shadow(plain success, (legacy:$legacy), left-2-in);\n        }\n      }\n    }\n\n    &--error {\n      #{ns(fieldset__content)} {\n        @include before {\n          @include color.box-shadow(plain error, (legacy:$legacy), left-2-in);\n        }\n      }\n    }\n\n    &--info {\n      #{ns(fieldset__content)} {\n        @include before {\n          @include color.box-shadow(plain info, (legacy:$legacy), left-2-in);\n        }\n      }\n    }\n  }\n}\n","@use '../variable/breakpoints';\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `['xs', 'sm', 'md', 'lg', 'xl']`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-from(md) {\n///     }\n///   }\n@mixin respond-from($media) {\n  $limits: map_get(breakpoints.$values, $media);\n\n  @if $limits != null {\n    @media (min-width: nth($limits, 1)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n","@use 'module/media-query/variable/breakpoints';\n@use 'module/media-query';\n\n@mixin order () {\n  @each $bp, $limits in breakpoints.$values {\n    @if $bp != xs {\n      @include media-query.respond-from($bp) {\n        /*! media #{$bp} */\n      }\n    }\n  }\n}\n","/// Styles spécifiques pour les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin is($target) {\n  @if $target == ie10 or $target == ie11 {\n    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n/// Styles spécifiques pour les plateformes modernes, excluant les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin is-not($target) {\n  @if $target == ie10 or $target == ie11 {\n    @supports not (-ms-high-contrast: none) {\n      @content;\n    }\n  }\n}\n","////\n/// Form legacy\n/// @group form\n////\n\n@use 'module/legacy';\n\n@include legacy.is(ie11) {\n  #{ns(fieldset)} {\n    &__legend {\n      max-width: 100%;\n    }\n  }\n\n  #{ns(message)} {\n    &--error {\n      @include icon-legacy(error-fill, sm);\n    }\n\n    &--valid {\n      @include icon-legacy(success-fill, sm);\n    }\n\n    &--info {\n      @include icon-legacy(info-fill, sm);\n    }\n  }\n}\n","////\n/// Core Tool : Icon legacy\n/// @group core\n////\n\n@mixin icon-size-legacy($size:md, $restrain: null) {\n  @include _icon-pseudo($restrain) {\n    $size: icon-size($size);\n    @include size($size, $size);\n    @content;\n  }\n}\n\n@mixin icon-image-legacy($icon, $restrain: null, $important: false) {\n  $url: get-icon-url($icon, $important);\n  @include _icon-pseudo($restrain) {\n    background-image: $url;\n  }\n}\n\n@mixin icon-style-legacy($restrain: null) {\n  @include _icon-pseudo($restrain) {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n    @content;\n  }\n}\n\n@mixin icon-legacy($icon: null, $size: md, $restrain: null, $styling: true) {\n  @if $styling {\n    @include icon-style-legacy($restrain);\n  }\n\n  @if $icon != null {\n    @include icon-image-legacy($icon, $restrain);\n  }\n\n  @if $size != null {\n    @include icon-size-legacy($size, $restrain);\n  }\n\n  @include _icon-pseudo($restrain) {\n    @content;\n  }\n}\n\n@mixin generate-icons-legacy($config: $icons-config) {\n  @each $icon, $setting in $config {\n    #{ns(icon-#{$icon})} {\n      @include icon-image-legacy($icon);\n    }\n  }\n}\n","////\n/// Form Print\n/// @group form\n////\n\n@media print {\n  @import 'index';\n  @import 'style/scheme';\n\n  @include _form-scheme('print');\n\n  @import 'style/print';\n}\n"]}