{"version":3,"sources":["<no source>","file:///Users/ket/Documents/work/dsfr/src/component/header/print.scss","file:///Users/ket/Documents/work/dsfr/src/component/header/style/_scheme.scss","file:///Users/ket/Documents/work/dsfr/module/color/mixin/_element.scss","file:///Users/ket/Documents/work/dsfr/src/component/header/style/_print.scss","%3Cinput%20css%20Pxhss6%3E","file:///Users/ket/Documents/work/dsfr/src/core/style/selector/tool/_pseudo.scss","file:///Users/ket/Documents/work/dsfr/module/disabled/mixin/_selector.scss","file:///Users/ket/Documents/work/dsfr/src/core/style/selector/tool/_block.scss","file:///Users/ket/Documents/work/dsfr/src/core/style/spacing/tool/_space.scss","file:///Users/ket/Documents/work/dsfr/module/legacy/mixin/_legacy.scss","file:///Users/ket/Documents/work/dsfr/module/elevation/mixin/_z-index.scss","file:///Users/ket/Documents/work/dsfr/module/media-query/mixin/_respond-from.scss","file:///Users/ket/Documents/work/dsfr/module/elevation/mixin/_drop.scss"],"names":[],"mappings":"AAAA;;GAAA;ACKA;ECMI;IC8BA,sBAAA;ICxBA,iBAAA;ECdF;;EHYE;IC0BA,cAAA;IAAA,gCAAA;IChBA,gBAAA;ECXF;;ECEA;IHyBE,gCAAA;EEDF;;EHHI;ICIF,cAAA;EEEF;;EExBS;;IJsBP,cAAA;EEkBF;;EHfI;ICHF,cAAA;EEuCF;;EE7DS;;IJsBP,cAAA;EEuDF;;EH/CM;ICRJ,cAAA;IAAA,gCAAA;EEwEF;;EE9FS;;IJsBP,cAAA;IAAA,mCAAA;EEyFF;;EG5HA;ILmCE,cAAA;EEyGF;;EHpFI;ICrBF,cAAA;EE4GF;;EElIS;;IJsBP,cAAA;EE4HF;;EHpGM;ICxBJ,cAAA;IAAA,gCAAA;EE6IF;;EEnKS;;IJsBP,cAAA;IAAA,mCAAA;EE8JF;;EH1HE;ICpCA,sBAAA;EEmLF;;ED3NA;IACE,aAAA;EC+NF;;ED3NE;IK2BA,UAfE;EJkNJ;;ED1NE;;IAEE,aAAA;EC4NJ;;EDrNE;IACE,WAAA;EC0NJ;AA1OF;AKKI;EREA;ISFI,YAAA;ENDN;;EH6BI;ICmFA,6BAAA;IAuJE,gBAAA;EE/NN;;EF2EM;IACE,qCAAA;EEzER;;EF4EM;IACE,oCAAA;EE1ER;;EEnCS;;IJqGL,6BAAA;EExDJ;;EF2DM;;IACE,qCAAA;EEzDR;;EF4DM;;IACE,oCAAA;EE1DR;;EH1BI;IC4EA,6BAAA;EEnCJ;;EFsCM;IACE,qCAAA;EEpCR;;EFuCM;IACE,oCAAA;EErCR;;EExES;;IJqGL,6BAAA;EEnBJ;;EFsBM;;IACE,qCAAA;EEpBR;;EFuBM;;IACE,oCAAA;EErBR;;EH1DM;ICuEF,6BAAA;EEFJ;;EFKM;IACE,qCAAA;EEHR;;EFMM;IACE,oCAAA;EEJR;;EEzGS;;IJqGL,6BAAA;EEeJ;;EFZM;;IACE,qCAAA;EEcR;;EFXM;;IACE,oCAAA;EEaR;;EH/EI;IC0DA,6BAAA;EEkCJ;;EF/BM;IACE,qCAAA;EEiCR;;EF9BM;IACE,oCAAA;EEgCR;;EE7IS;;IJqGL,6BAAA;EEkDJ;;EF/CM;;IACE,qCAAA;EEiDR;;EF9CM;;IACE,oCAAA;EEgDR;;EH/GM;ICuDF,6BAAA;EEmEJ;;EFhEM;IACE,qCAAA;EEkER;;EF/DM;IACE,oCAAA;EEiER;;EE9KS;;IJqGL,6BAAA;EEoFJ;;EFjFM;;IACE,qCAAA;EEmFR;;EFhFM;;IACE,oCAAA;EEkFR;AAzMF;AOMI;EVLF;IC+BE,sBAAA;EEtBF;;EHoDE;IC9BA,gCAAA;EE8KF;AAnMF;AKXI;ERCF;ISDM,YAAA;ENeN;;EHDI;IWhBA,aAAA;IACA,uBAAA;ERsBJ;;EHHI;ICoPE,gBAAA;EE5ON;AAVF","file":"header.print.css","sourcesContent":[null,"////\n/// Header Print\n/// @group header\n////\n\n@media print {\n  @import 'index';\n  @import 'style/scheme';\n\n  @include _header-scheme('print');\n\n  @import 'style/print';\n}\n","////\n/// header Scheme\n/// @group header\n////\n\n@use 'module/color';\n@use 'module/elevation';\n@use 'module/media-query';\n\n@mixin _header-scheme($legacy: false) {\n  #{ns(header)} {\n    &__brand {\n      @include elevation.elevate(raised-over, (legacy: $legacy));\n    }\n\n    &__service {\n      @include color.text(title grey, (legacy:$legacy));\n      @include color.box-shadow(default grey, (legacy:$legacy), top-1-in);\n    }\n\n    @include media-query.respond-from(lg) {\n      @include elevation.elevate(raised-over, (legacy: $legacy));\n\n      &__brand {\n        @include elevation.drop((legacy:$legacy));\n      }\n\n      &__service {\n        @include color.no-box-shadow((legacy:$legacy));\n      }\n    }\n\n    &__menu-links {\n      @include after {\n        @include color.box-shadow(default grey, (legacy:$legacy), top-1-in);\n      }\n\n      #{ns(btn)} {\n        @include btn-kind-scheme(4, $legacy);\n        @include color.no-box-shadow((legacy: $legacy));\n      }\n    }\n\n    &__tools-links {\n      #{ns(btn)} {\n        @include btn-kind-scheme(4, $legacy);\n      }\n\n      > #{ns(translate)}:first-child:last-child {\n        #{ns(btn)} {\n          @include btn-kind-scheme(3, $legacy);\n        }\n      }\n    }\n\n    &__navbar {\n      #{ns(service)} {\n        @include title {\n          @include color.text(title grey, (legacy:$legacy));\n        }\n      }\n\n      #{ns(btn)} {\n        @include btn-kind-scheme(4, $legacy);\n\n        &--menu {\n          @include btn-kind-scheme(3, $legacy);\n        }\n      }\n    }\n\n    #{ns(header__menu)} {\n      @include respond-from(lg) {\n        @include color.box-shadow(default grey, (legacy:$legacy), top-1-in);\n      }\n    }\n\n    #{ns(modal)} {\n      @include color.background(lifted grey, (legacy:$legacy));\n    }\n  }\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'module/legacy';\n@use 'module/media-query';\n@use 'module/spacing';\n@use 'module/specificity';\n@use 'module/string';\n@use 'module/utilities';\n@use '../variable/constant';\n@use '../function/box-shadow' as bs;\n@use '../function/colors';\n@use '../function/result';\n@use '../function/token';\n\n$COLOR: constant.$value;\n\n@mixin element($prop, $context, $tokens, $options: (), $value: $COLOR) {\n  $legacy: map.get($options, legacy);\n  $important: map.get($options, important);\n  $hover: map.get($options, hover);\n  $standalone: map.get($options, standalone);\n\n  $legacy-target: null;\n  @if $legacy == true {\n    $legacy-target: ie11;\n  }\n\n  $tokens: token.normalise($tokens, $context);\n  $type: decision;\n  $options: (var: true);\n\n  @if $legacy or $standalone {\n    $type: hex;\n    $option: (theme: light);\n  }\n\n  $colors: colors.from-list($tokens, $type, $options);\n  $result: result.get($colors, $value);\n  $result: specificity.important($result, $important);\n\n  @include legacy.is($legacy-target) {\n    #{$prop}: #{string.unstringify($result)};\n  }\n\n  @if ($hover == true or ($hover == inherit and $legacy == false)) and ($context == background and list.length($tokens) == 1) {\n\n    $token: nth($tokens, 1);\n    @if $legacy or $standalone {\n      @include _apply-pseudos($token, false, true, $legacy-target, $prop, $value, $important);\n    }\n    @else {\n      @if $prop == background-color {\n        --idle: transparent; // #{$result};\n        @include _apply-pseudos($token, true, false, null, $prop, $value, $important);\n      }\n      @else {\n        @include _apply-pseudos($token, true, true, null, $prop, $value, $important);\n      }\n    }\n  }\n}\n\n@mixin _apply-pseudos($token, $decision: true, $pseudo: false, $target: null, $prop: background-color, $value: constant.$value, $important: false) {\n  @include legacy.is($target) {\n    @include _apply-pseudo($token, hover, $decision, $pseudo, $prop, $value, $important);\n    @include _apply-pseudo($token, active, $decision, $pseudo, $prop, $value, $important);\n  }\n}\n\n@mixin _apply-pseudo($token, $type, $decision: true, $pseudo: false, $prop: background-color, $value: constant.$value, $important: false) {\n  $nest: null;\n  $p: --#{$type};\n  @if $pseudo {\n    $nest: '&:#{$type}';\n    $p: $prop;\n  }\n\n  $t: hex;\n  $options: (#{$type}: true);\n  @if $decision {\n    $t: decision;\n    $options: (var: true, #{$type}: true);\n  }\n\n  $color: colors.from($token, $t, $options);\n  $result: result.get($color, $value);\n  $result: specificity.important($result, $important);\n\n  @include utilities.nest($nest) {\n    #{$p}: #{string.unstringify($result)};\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin background($tokens, $options:()) {\n  @if not map.has-key($options, hover) {\n    $options: map.merge($options, (hover: inherit));\n  }\n  @include element(background-color, background, $tokens, $options);\n}\n\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - hover {boolean}: si true, surcharge la valeur de blend pour être héritée\n@mixin transparent-background($options) {\n  $legacy: map.get($options, legacy);\n  $important: map.get($options, important);\n  $hover: map.get($options, hover);\n  $tokens: token.normalise(default grey, background);\n  $value: specificity.important(transparent, $important);\n\n  @if $legacy {\n    @include legacy.is(ie11) {\n      background-color: transparent;\n\n      @if $hover {\n        &:hover {\n          background-color: rgba(0, 0, 0, 0.05);\n        }\n\n        &:active {\n          background-color: rgba(0, 0, 0, 0.1);\n        }\n      }\n    }\n  }\n  @else {\n    background-color: #{$value};\n    @if $hover {\n      --hover: inherit;\n      --active: inherit;\n    }\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin background-image($tokens, $options, $value: linear-gradient(0deg, $COLOR, $COLOR)) {\n  $d: token.length($tokens);\n  @if $d > 1 and $value == linear-gradient(0deg, $COLOR, $COLOR) {\n    $transformed: ();\n    @for $i from 1 through $d {\n      $c: string.unquote('$color##{$i}');\n      $transformed: list.append($transformed, linear-gradient(0deg, $c, $c), comma);\n    }\n    $value: $transformed;\n  }\n  @include element(background-image, background, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin text($tokens, $options) {\n  @include element(color, text, $tokens, $options);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin text-fill($tokens, $options) {\n  @include element(-webkit-text-fill-color, text, $tokens, $options);\n}\n\n/// Ajout d'une couleur de fill sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin fill($tokens, $options) {\n  @include element(fill, background , $tokens, $options);\n}\n\n/// Ajout d'une couleur de border sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - side {String}: le côté affecté. valeurs: top, right, bottom, left\n/// @param {List} $value - définition des propriétés de border\n@mixin border($tokens, $options, $value:1px solid $COLOR) {\n  $prop:border;\n  @if map.has-key($options, side) {\n    $prop:border-#{map.get($options, side)};\n  }\n  @include element($prop, border, $tokens, $options, $value);\n}\n\n@mixin no-border($options: ()) {\n  $breakpoint: map.get($options, breakpoint);\n  $legacy: map.get($options, legacy);\n  @include media-query.respond-from($breakpoint) {\n    @if $legacy {\n      @include legacy.is(ie11) {\n        border: 0;\n      }\n    }\n    @else {\n      border: 0;\n    }\n  }\n}\n\n/// Ajout d'une couleur d'outline sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés d'outline\n@mixin outline($tokens, $options, $value:1px solid $COLOR) {\n  @include element(outline, border, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de box-shadow sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés de box-shadow\n@mixin box-shadow($tokens, $options, $value: all-1-in) {\n  $has-keys: true;\n  $transformed: ();\n  $d: token.length($tokens);\n  $i: 1;\n  @each $v in $value {\n    @if bs.has($v) {\n      $transformed: append($transformed, bs.get($v, $i), comma);\n      @if $i < $d {\n        $i: $i + 1;\n      }\n    }\n    @else {\n      $has-keys: false;\n    }\n  }\n  @if $has-keys {\n    $value: $transformed;\n  }\n  @include element(box-shadow, border, $tokens, $options, spacing.space($value));\n}\n\n/// Supprime la shadow-box sur l'élément\n/// @access public\n/// @param {string} $breakpoint - la shadow-box est retiré à partir d'un breakpoint si celui-ci est défini\n@mixin no-box-shadow($options) {\n  $breakpoint: map.get($options, breakpoint);\n  $legacy: map.get($options, legacy);\n  @include media-query.respond-from($breakpoint) {\n    @if $legacy {\n      @include legacy.is(ie11) {\n        box-shadow: none;\n      }\n    }\n    @else {\n      box-shadow: none;\n    }\n  }\n}\n","#{ns(header)} {\n  &__menu {\n    display: none;\n  }\n\n  &__body {\n    &-row {\n      @include padding(0);\n    }\n\n    #{ns(header)}__tools,\n    #{ns(header)}__navbar {\n      display: none;\n    }\n  }\n\n  &__brand {\n    flex-wrap: nowrap;\n\n    &-top {\n      width: auto;\n    }\n  }\n\n  &__service {\n    box-shadow: none;\n  }\n}\n","@media print {\n  .fr-header__brand {\n    background-color: #fff;\n  }\n}\n@media print and (-ms-high-contrast: none), print and (-ms-high-contrast: active) {\n  .fr-header__brand {\n    z-index: 750;\n  }\n}\n@media print {\n  .fr-header__service {\n    color: #161616;\n    box-shadow: inset 0 1px 0 0 #ddd;\n  }\n}\n@media print and (min-width: 62em) {\n  .fr-header {\n    background-color: #fff;\n  }\n}\n@media print and (min-width: 62em) and (-ms-high-contrast: none), print and (min-width: 62em) and (-ms-high-contrast: active) {\n  .fr-header {\n    z-index: 750;\n  }\n}\n@media print and (min-width: 62em) and (-ms-high-contrast: none), print and (min-width: 62em) and (-ms-high-contrast: active) {\n  .fr-header__brand {\n    z-index: auto;\n    background: transparent;\n  }\n}\n@media print and (min-width: 62em) and (-ms-high-contrast: none), print and (min-width: 62em) and (-ms-high-contrast: active) {\n  .fr-header__service {\n    box-shadow: none;\n  }\n}\n@media print {\n  .fr-header__menu-links::after {\n    box-shadow: inset 0 1px 0 0 #ddd;\n  }\n  .fr-header__menu-links .fr-btn {\n    color: #000091;\n  }\n}\n@media print and (-ms-high-contrast: none), print and (-ms-high-contrast: active) {\n  .fr-header__menu-links .fr-btn {\n    background-color: transparent;\n  }\n  .fr-header__menu-links .fr-btn:hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n  .fr-header__menu-links .fr-btn:active {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n}\n@media print {\n  .fr-header__menu-links .fr-btn:disabled, .fr-header__menu-links a.fr-btn:not([href]) {\n    color: #929292;\n  }\n}\n@media print and (-ms-high-contrast: none), print and (-ms-high-contrast: active) {\n  .fr-header__menu-links .fr-btn:disabled, .fr-header__menu-links a.fr-btn:not([href]) {\n    background-color: transparent;\n  }\n  .fr-header__menu-links .fr-btn:disabled:hover, .fr-header__menu-links a.fr-btn:not([href]):hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n  .fr-header__menu-links .fr-btn:disabled:active, .fr-header__menu-links a.fr-btn:not([href]):active {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n}\n@media print and (-ms-high-contrast: none), print and (-ms-high-contrast: active) {\n  .fr-header__menu-links .fr-btn {\n    box-shadow: none;\n  }\n}\n@media print {\n  .fr-header__tools-links .fr-btn {\n    color: #000091;\n  }\n}\n@media print and (-ms-high-contrast: none), print and (-ms-high-contrast: active) {\n  .fr-header__tools-links .fr-btn {\n    background-color: transparent;\n  }\n  .fr-header__tools-links .fr-btn:hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n  .fr-header__tools-links .fr-btn:active {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n}\n@media print {\n  .fr-header__tools-links .fr-btn:disabled, .fr-header__tools-links a.fr-btn:not([href]) {\n    color: #929292;\n  }\n}\n@media print and (-ms-high-contrast: none), print and (-ms-high-contrast: active) {\n  .fr-header__tools-links .fr-btn:disabled, .fr-header__tools-links a.fr-btn:not([href]) {\n    background-color: transparent;\n  }\n  .fr-header__tools-links .fr-btn:disabled:hover, .fr-header__tools-links a.fr-btn:not([href]):hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n  .fr-header__tools-links .fr-btn:disabled:active, .fr-header__tools-links a.fr-btn:not([href]):active {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n}\n@media print {\n  .fr-header__tools-links > .fr-translate:first-child:last-child .fr-btn {\n    color: #000091;\n    box-shadow: inset 0 0 0 1px #ddd;\n  }\n}\n@media print and (-ms-high-contrast: none), print and (-ms-high-contrast: active) {\n  .fr-header__tools-links > .fr-translate:first-child:last-child .fr-btn {\n    background-color: transparent;\n  }\n  .fr-header__tools-links > .fr-translate:first-child:last-child .fr-btn:hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n  .fr-header__tools-links > .fr-translate:first-child:last-child .fr-btn:active {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n}\n@media print {\n  .fr-header__tools-links > .fr-translate:first-child:last-child .fr-btn:disabled, .fr-header__tools-links > .fr-translate:first-child:last-child a.fr-btn:not([href]) {\n    color: #929292;\n    box-shadow: inset 0 0 0 1px #e5e5e5;\n  }\n}\n@media print and (-ms-high-contrast: none), print and (-ms-high-contrast: active) {\n  .fr-header__tools-links > .fr-translate:first-child:last-child .fr-btn:disabled, .fr-header__tools-links > .fr-translate:first-child:last-child a.fr-btn:not([href]) {\n    background-color: transparent;\n  }\n  .fr-header__tools-links > .fr-translate:first-child:last-child .fr-btn:disabled:hover, .fr-header__tools-links > .fr-translate:first-child:last-child a.fr-btn:not([href]):hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n  .fr-header__tools-links > .fr-translate:first-child:last-child .fr-btn:disabled:active, .fr-header__tools-links > .fr-translate:first-child:last-child a.fr-btn:not([href]):active {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n}\n@media print {\n  .fr-header__navbar .fr-service__title {\n    color: #161616;\n  }\n  .fr-header__navbar .fr-btn {\n    color: #000091;\n  }\n}\n@media print and (-ms-high-contrast: none), print and (-ms-high-contrast: active) {\n  .fr-header__navbar .fr-btn {\n    background-color: transparent;\n  }\n  .fr-header__navbar .fr-btn:hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n  .fr-header__navbar .fr-btn:active {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n}\n@media print {\n  .fr-header__navbar .fr-btn:disabled, .fr-header__navbar a.fr-btn:not([href]) {\n    color: #929292;\n  }\n}\n@media print and (-ms-high-contrast: none), print and (-ms-high-contrast: active) {\n  .fr-header__navbar .fr-btn:disabled, .fr-header__navbar a.fr-btn:not([href]) {\n    background-color: transparent;\n  }\n  .fr-header__navbar .fr-btn:disabled:hover, .fr-header__navbar a.fr-btn:not([href]):hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n  .fr-header__navbar .fr-btn:disabled:active, .fr-header__navbar a.fr-btn:not([href]):active {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n}\n@media print {\n  .fr-header__navbar .fr-btn--menu {\n    color: #000091;\n    box-shadow: inset 0 0 0 1px #ddd;\n  }\n}\n@media print and (-ms-high-contrast: none), print and (-ms-high-contrast: active) {\n  .fr-header__navbar .fr-btn--menu {\n    background-color: transparent;\n  }\n  .fr-header__navbar .fr-btn--menu:hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n  .fr-header__navbar .fr-btn--menu:active {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n}\n@media print {\n  .fr-header__navbar .fr-btn--menu:disabled, .fr-header__navbar a.fr-btn--menu:not([href]) {\n    color: #929292;\n    box-shadow: inset 0 0 0 1px #e5e5e5;\n  }\n}\n@media print and (-ms-high-contrast: none), print and (-ms-high-contrast: active) {\n  .fr-header__navbar .fr-btn--menu:disabled, .fr-header__navbar a.fr-btn--menu:not([href]) {\n    background-color: transparent;\n  }\n  .fr-header__navbar .fr-btn--menu:disabled:hover, .fr-header__navbar a.fr-btn--menu:not([href]):hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n  .fr-header__navbar .fr-btn--menu:disabled:active, .fr-header__navbar a.fr-btn--menu:not([href]):active {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n}\n@media print and (min-width: 62em) {\n  .fr-header .fr-header__menu {\n    box-shadow: inset 0 1px 0 0 #ddd;\n  }\n}\n@media print {\n  .fr-header .fr-modal {\n    background-color: #fff;\n  }\n}\n@media print {\n  .fr-header__menu {\n    display: none;\n  }\n  .fr-header__body-row {\n    padding: 0;\n  }\n  .fr-header__body .fr-header__tools,\n  .fr-header__body .fr-header__navbar {\n    display: none;\n  }\n  .fr-header__brand {\n    flex-wrap: nowrap;\n  }\n  .fr-header__brand-top {\n    width: auto;\n  }\n  .fr-header__service {\n    box-shadow: none;\n  }\n}","////\n/// Core Tool : Selector pseudo\n/// @group core\n////\n\n@mixin _pseudo($type:before, $content:null, $display:null) {\n  @if $type != after and $type != before and $type != marker and $type != (before after) {\n    @error '$type must be before or after element';\n  }\n\n  $selector: ();\n\n  @each $pseudo in $type {\n    $selector: append($selector, '&::#{$pseudo}', 'comma');\n  }\n\n  #{$selector} {\n\n    @if $content != null {\n      content: $content;\n    }\n\n    @if $display != null {\n      display: #{$display};\n    }\n\n    @content;\n  }\n}\n\n@mixin before($content: null, $display: null) {\n  @include _pseudo(before, $content, $display) {\n    @content;\n  }\n}\n\n@mixin after($content: null, $display: null) {\n  @include _pseudo(after, $content, $display) {\n    @content;\n  }\n}\n\n@mixin marker($content: null, $display: null) {\n  @include _pseudo(marker, $content, $display) {\n    @content;\n  }\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'colors';\n@use 'module/selector';\n\n/// Applique les couleurs disabled sur l'élément avec les sélecteurs appropriés\n/// @access public\n/// @param {map} map des options :\n///   - can-be-link {boolean}: ajoute le sélecteur de lien sans href.\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - background {boolean}: true, applique le token background disabled sur la couleur de fond\n///   - text {boolean}: true, applique le token text disabled sur la couleur de texte\n///   - box-shadow {}: si true, applique le token border disabled sur l'élément avec la box-shadow par défaut (encadré de 1 px). si une valeur de box-shadow est fournie, applique cette valeur (voir get-box-shadow)\n@mixin selector($options: (), $colors: null) {\n  $selectors: '&:disabled';\n  @if map.get($options, can-be-link) {\n    $selectors: list.append($selectors, selector.associate(&, 'a:not([href])'), comma);\n  }\n\n  @at-root #{$selectors} {\n    @if $colors != null {\n      @include colors.colors($colors);\n    }\n    @content;\n  }\n}\n","////\n/// Core Tool : Selector block\n/// @group core\n////\n\n@mixin title() {\n  &__title {\n    @content;\n  }\n}\n\n@mixin body() {\n  &__body {\n    @content;\n  }\n}\n\n@mixin list() {\n  &__list {\n    @content;\n  }\n}\n\n@mixin list-item() {\n  &__item {\n    @content;\n  }\n}\n","////\n/// Core Tool : Spacing space\n/// @group core\n////\n\n@use 'module/spacing';\n\n/// Set space property\n///\n/// @param {String} $property ['margin'] - propriété à appliquer à l'espacement `['margin', 'padding']`\n/// @param {Number | list} $value [2] - valeur de l'espacement en v ou w. peut être une liste si la direction n'est pas renseignée\n/// @param {String} $direction - direction de l'espacement `['x', 'y', 'top', 'right', 'bottom', 'left']`\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     @include _spacing('margin', 6v, 'bottom');\n///   }\n@mixin _spacing($property: margin, $value: 0, $direction: null) {\n  $v: spacing.space($value);\n  @if $direction != null {\n    @if $direction == 'x' {\n      #{$property}-left: $v;\n      #{$property}-right: $v;\n    }\n    @else if $direction == 'y' {\n      #{$property}-top: $v;\n      #{$property}-bottom: $v;\n    }\n    @else {\n      #{$property}-#{$direction}: $v;\n    }\n  }\n  @else {\n    #{$property}: $v;\n  }\n}\n\n@mixin _spacing-from($property: margin, $value: 0, $direction: null, $from: null) {\n  @include respond-from($from) {\n    @include _spacing($property, $value, $direction);\n  }\n}\n\n@mixin padding($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(padding, $values, null, $from);\n}\n\n@mixin padding-x($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'x', $from);\n}\n\n@mixin padding-y($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'y', $from);\n}\n\n@mixin padding-top($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'top', $from);\n}\n\n@mixin padding-right($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'right', $from);\n}\n\n@mixin padding-bottom($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'bottom', $from);\n}\n\n@mixin padding-left($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'left', $from);\n}\n\n@mixin margin($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(margin, $values, null, $from);\n}\n\n@mixin margin-x($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'x', $from);\n}\n\n@mixin margin-y($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'y', $from);\n}\n\n@mixin margin-top($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'top', $from);\n}\n\n@mixin margin-right($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'right', $from);\n}\n\n@mixin margin-bottom($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'bottom', $from);\n}\n\n@mixin margin-left($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'left', $from);\n}\n","/// Styles spécifiques pour les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin is($target) {\n  @if $target == ie10 or $target == ie11 {\n    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n/// Styles spécifiques pour les plateformes modernes, excluant les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin is-not($target) {\n  @if $target == ie10 or $target == ie11 {\n    @supports not (-ms-high-contrast: none) {\n      @content;\n    }\n  }\n}\n","@use 'sass:map';\n@use 'module/elevation/variable/z-indexes';\n@use 'module/legacy';\n\n@mixin z-index($level, $legacy: false) {\n  @if map.has-key(z-indexes.$values, $level) {\n    $z-index: map.get(z-indexes.$values, $level);\n    @if $legacy {\n      @include legacy.is(ie11) {\n        z-index: #{$z-index};\n      }\n    }\n    @else {\n      z-index: calc(var(--ground) + #{$z-index});\n    }\n  }\n}\n","@use '../variable/breakpoints';\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `['xs', 'sm', 'md', 'lg', 'xl']`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-from(md) {\n///     }\n///   }\n@mixin respond-from($media) {\n  $limits: map_get(breakpoints.$values, $media);\n\n  @if $limits != null {\n    @media (min-width: nth($limits, 1)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n","@use 'sass:map';\n@use 'module/legacy';\n\n@mixin drop($options: ()) {\n  $legacy: map.get($options, legacy);\n  @if $legacy {\n    @include legacy.is(ie11) {\n      z-index: auto;\n      background: transparent;\n    }\n  }\n  @else {\n    z-index: auto;\n    background: transparent;\n    filter: none;\n  }\n}\n"]}