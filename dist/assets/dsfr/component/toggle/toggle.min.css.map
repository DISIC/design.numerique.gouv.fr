{"version":3,"sources":["<no source>","file:///Users/ket/Documents/work/dsfr/src/component/toggle/style/module/_default.scss","file:///Users/ket/Documents/work/dsfr/src/core/style/typography/tool/_styles.scss","file:///Users/ket/Documents/work/dsfr/src/core/style/spacing/tool/_space.scss","file:///Users/ket/Documents/work/dsfr/src/core/style/spacing/tool/_position.scss","%3Cinput%20css%20VfUn5C%3E","file:///Users/ket/Documents/work/dsfr/module/color/mixin/_element.scss","file:///Users/ket/Documents/work/dsfr/src/core/style/spacing/tool/_size.scss","file:///Users/ket/Documents/work/dsfr/src/core/style/selector/tool/_pseudo.scss","file:///Users/ket/Documents/work/dsfr/module/color/mixin/_data-uri-svg.scss","file:///Users/ket/Documents/work/dsfr/src/core/style/display/tool/_display.scss","file:///Users/ket/Documents/work/dsfr/src/component/toggle/style/module/_variants.scss","file:///Users/ket/Documents/work/dsfr/src/component/toggle/style/module/_group.scss","file:///Users/ket/Documents/work/dsfr/src/core/style/typography/tool/_list.scss","file:///Users/ket/Documents/work/dsfr/module/utilities/mixin/_nest.scss","file:///Users/ket/Documents/work/dsfr/src/component/toggle/style/_scheme.scss","file:///Users/ket/Documents/work/dsfr/module/disabled/mixin/_selector.scss","file:///Users/ket/Documents/work/dsfr/module/media-query/mixin/_respond-from.scss","file:///Users/ket/Documents/work/dsfr/module/shame/media-query/mixin/_order.scss","file:///Users/ket/Documents/work/dsfr/module/legacy/mixin/_legacy.scss","file:///Users/ket/Documents/work/dsfr/src/component/toggle/style/_legacy.scss","file:///Users/ket/Documents/work/dsfr/src/core/style/icon/tool/_legacy.scss","file:///Users/ket/Documents/work/dsfr/src/component/toggle/print.scss","file:///Users/ket/Documents/work/dsfr/src/component/toggle/style/_print.scss"],"names":[],"mappings":"AAAA;;GAAA,ACOA,WCkGI,gBAAA,CAAA,iBAAA,CDjGF,YAAA,CACA,cAAA,CEwBE,cAfE,CCVJ,iBCeF,CJRE,gCK0BE,gEAAA,CCoBE,aAAA,CN3CF,SAAA,CGVF,iBAAA,CGkDI,YF7BN,CGbE,iHAGI,mCHaN,CGhBE,gECmBE,uNAAA,CAWE,oCAAA,CRnBI,0BIQV,CJDE,iBACE,0BAAA,CKMA,4BAAA,CLLA,mBAAA,CCVF,cAAA,CAGE,kBAAA,CDSA,iBAAA,CADA,uBIMJ,CJFI,iEEZE,cEiBN,CG9BE,wEAGI,qCPyBgB,CEfhB,kBAXA,CAWA,qDEsBN,CJFM,+EEpBA,gBEyBN,CGtCE,wBCmBE,oOAAA,CAWE,oCAAA,CRaA,oBAAA,COpCA,aAAA,CPgCA,aAAA,CC7BJ,gBAAA,CD8BI,0BAAA,CC3BF,mBAAA,CCAE,iBAXA,CF4CA,gBAAA,CADA,gBAAA,CEhCA,mBEuCN,CGpDE,+CP+CI,2BAAA,CKtBF,oCAAA,CEtBE,UHgEN,CGnEE,uBFoCM,kBAAA,CAqCJ,4CAAA,CAAA,8CAAA,CItEA,kBAAA,CJsBA,+CAAA,CL+BE,uBAAA,CADA,oBAAA,CAFA,iBAAA,CK5BF,gEAAA,CI9BA,YAAA,CHkDE,aAAA,CGtCF,sBAAA,CNJA,MAAA,CAXF,iBAAA,CAEE,QAAA,CGgDE,YFyBN,CJPE,yBKnCE,8BAAA,CLoCA,aAAA,CAIA,eAAA,CCvDF,gBAAA,CAGE,mBAAA,CCAE,eAXA,CAWA,eE8DN,CMnFE,yCRyBE,iBAfE,CQTF,ONuFJ,CGhFE,6ELaI,oDAXA,CAWA,cEuEN,CMhFE,yCAIE,MAAA,CAHA,6BAAA,CRQE,cAXA,CQKF,uBNmFJ,CG1FE,gDGgBI,aAAA,CALA,aAAA,CREA,gBAXA,CAWA,cAXA,CQUA,OAAA,CAGA,gBNmFN,CGlGE,+CGoBI,SAAA,CACA,UNiFN,CM7EE,qCACE,ON+EJ,COpHA,iBCoBE,cAAA,CACA,cAAA,CACA,YAAA,CACA,YAAA,CACA,YAAA,CACA,aAAA,CACA,iBRoGF,COxHI,wDTkBE,aE0GN,CGvHE,oEIAQ,KP0HV,CSxII,kDLwCE,oOJ4GN,CU1HM,wCTwBE,kBAAA,CAqCJ,kDAAA,CAAA,oDAAA,CAhDA,qDD+HJ,CGxJE,iECmBE,kOAAA,CAWE,oCJ8HN,CS1KI,2FLwCE,kOJqIN,CS7KI,0FLwCE,uNJ6IN,CWpKW,yCVsBP,sDDkJJ,CUhJQ,iDTSA,kBAAA,CAqCJ,6CAAA,CAAA,+CAAA,CAhDA,gDDwJJ,CGjLE,0ECmBE,kOAAA,CAWE,oCJuJN,CSnMI,oGLwCE,kOJ8JN,CGxLE,yECmBE,uNAAA,CAWE,oCJ+JN,CS3MI,mGLwCE,oNJsKN,CGhME,kECmBE,oOAAA,CAWE,oCAAA,CHLF,+BD6KJ,CSpNI,4FLwCE,oOJ+KN,CGzME,iEFyBE,sDAAA,CAAA,+BDqLJ,CUpJI,0BTjCA,sDD4LJ,CUpJI,6DTxCA,+BDiMJ,CG1NE,2ECmBE,oOAAA,CAWE,oCAAA,CHLF,+BDuMJ,CS9OI,+HLwCE,oOJyMN,CGnOE,yEFyBE,oDD+MJ,CGxOE,6JCmBE,kOAAA,CAWE,oCJ+MN,CS3PI,iNLwCE,kOJsNN,CUrJI,6DTlEA,iCD4NJ,CGrPE,2ECmBE,oOAAA,CAWE,oCAAA,CHLF,iCDkOJ,CSzQI,+HLwCE,oOJoON,CG9PE,yEFyBE,sDD0OJ,CGnQE,6JCmBE,kOAAA,CAWE,oCJ0ON,CStRI,iNLwCE,kOJiPN,CY5QI;ECRI,cAAA;EAAA,cAAA,CbDR,CYSI;ECRI,cAAA;EAAA,cAAA,CbER,CYMI;ECRI,cAAA;EAAA,cAAA,CbKR,CYGI;ECRI,cAAA;EAAA,cAAA,CbQR,CcNI,2DCCE,2CACE,YfiSN,CG5RA,6FaME,4BAAA,CANA,uDAFI,CAUJ,2BAAA,CADA,oBAAA,CdsCE,aAAA,CAHA,YFuPJ,Ce9RE,iBACE,eAAA,CjBaF,SE2RF,CUlTE,iBT+BA,aDwRF,CGjTA,wBCcM,sOAAA,CHWJ,aD6RF,CGtTA,uBFyBE,qBAAA,CAAA,aDuSF,CUvTE,uDTgBA,kCDsTF,CUnUI,wCTaF,wBD2TF,CGpVA,iECcM,oOJ2UN,CGzVA,gECcM,yNJgVN,CW3VS,yCVsBP,kCD0UF,CUxUM,iDTFJ,wBD+UF,CGxWA,0ECcM,oOJ+VN,CG7WA,yECcM,yNJoWN,CGlXA,kECcM,sOAAA,CHWJ,aD8VF,CGvXA,iEFyBE,kCAAA,CAAA,aDwWF,CU3UE,yBT7BA,UDmXF,CUlVE,0BTjCA,gCDwXF,CUhVE,6DTxCA,aD+XF,CGxZA,2ECcM,sOAAA,CHWJ,aDqYF,CG9ZA,yEFyBE,kCDiZF,CG1aA,6JCcM,oOJkaN,CUrVE,6DTlEA,aD8ZF,CGvbA,2ECcM,sOAAA,CHWJ,aDoaF,CG7bA,yEFyBE,kCDgbF,CGzcA,6JCcM,oOJicN,CAlKF,CiBxTA,aPKI,iBT+BA,aD4bF,CGrdA,wBFyBE,aAAA,CEtBE,UejBc,CfqBd,aAAA,CNGJ,cAAA,CAGE,kBG2cF,CGxdA,uBFyBE,qBAAA,CAAA,aD2cF,CU3dE,uDTgBA,kCDgdF,CU7dI,wCTaF,wBDmdF,CWzeS,yCVsBP,kCDkeF,CUheM,iDTFJ,wBDqeF,CG9fA,kEFyBE,aDofF,CG7gBA,iEFyBE,kCAAA,CAAA,aD+fF,CUleE,yBT7BA,UAAA,CJfF,cAAA,CAGE,kBGghBF,CUneE,0BTjCA,gCDygBF,CGliBA,wIFyBE,aDmhBF,CG5iBA,yEFyBE,kCD+hBF,CGxjBA,wIFyBE,aD+iBF,CGxkBA,yEFyBE,kCD2jBF,CA3HF,CcheI,+EXOF,wBCcM,sOJ+cN,CG7dA,iECcM,oOJmeN,CGjfA,gECcM,yNJweN,CGtfA,0ECcM,oOJqfN,CGngBA,yECcM,yNJ0fN,CGxgBA,kECcM,sOJogBN,CGlhBA,2ECcM,sOJoiBN,CGljBA,6JCcM,oOJgjBN,CG9jBA,2ECcM,sOJgkBN,CG9kBA,6JCcM,oOJ4kBN,CA5HF","file":"toggle.min.css","sourcesContent":[null,"////\n/// Toggle Module : toggle\n/// @group toggle\n////\n\n@use 'module/spacing';\n\n#{ns(toggle)} {\n  display: flex;\n  flex-wrap: wrap;\n  @include relative;\n  @include padding(4v 0);\n  @include set-text-margin(0);\n  @include set-title-margin(0);\n\n  input[type=\"checkbox\"] {\n    @include size(10v, 6v);\n    @include absolute;\n    opacity: 0;\n\n    &:checked {\n      ~ #{ns(toggle__label)} {\n        &#{ns-attr(unchecked-label)}#{ns-attr(checked-label)} {\n          @include before(attr(#{ns-attr(checked-label, null, true)}));\n        }\n\n        @include after {\n          transform: translateX(space(4v));\n          @include z-index(higher);\n        }\n      }\n    }\n  }\n\n  label {\n    --toggle-status-width: auto;\n    display: inline-flex;\n    width: spacing.space(calc(100% - 8v));\n    min-height: spacing.space(6v);\n    @include text-style(md);\n\n    &#{ns-attr(unchecked-label)}#{ns-attr(checked-label)} {\n      @include padding-left(0);\n\n      @include before(attr(#{ns-attr(unchecked-label, null, true)})) {\n        @include margin-right(calc(var(--toggle-status-width) - #{spacing.space(2v)}));\n        @include margin-bottom(4v);\n      };\n\n      + #{ns(hint-text)} {\n        @include margin-top(2v);\n      }\n    }\n\n    @include before('', block) {\n      flex-shrink: 0;\n      height: spacing.space(calc(5v + 1px));\n      @include padding-top(7v);\n      @include text-style(xs);\n      border-radius: spacing.space(3v);\n      @include margin-right(8v);\n      min-width: spacing.space(10v);\n      max-width: spacing.space(10v);\n      background-repeat: no-repeat;\n    }\n\n    @include after('') {\n      @include display-flex(null,center,center);\n      @include absolute(4v, null, null, 0, 6v, 6v);\n      border-radius: 50%;\n      background-repeat: no-repeat;\n      background-size: spacing.space(4v);\n      background-position: center;\n    }\n  }\n\n  #{ns(hint-text)} {\n    display: block;\n    @include margin-top(4v);\n    @include margin-bottom(0);\n    @include text-style(xs);\n    flex-basis: 100%;\n  }\n}\n","////\n/// Core Tool : Typography build\n/// @group core\n////\n\n@use 'module/spacing';\n\n@function get-text-style($font-size) {\n  @return map-get($text-styles, $font-size);\n}\n\n@function get-title-style($font-size) {\n  @return map-get($title-styles, $font-size);\n}\n\n@mixin _stylize($font-size, $styles, $prepend, $append) {\n  $style: map-get($styles, $font-size);\n\n  @if $prepend == null {\n    $prepend: '';\n  }\n\n  @if $append == null {\n    $append: '';\n  }\n\n  font-size: #{$prepend} spacing.space($font-size) #{$append};\n\n  @if map-has-key($style, line-height) {\n    line-height: #{$prepend} spacing.space(map-get($style, line-height)) #{$append};\n  }\n}\n\n@mixin _responsive-styles($settings, $styles, $is-responsive, $prepend, $append) {\n  $breakpoints: map-get($settings, breakpoints);\n\n  @if map-has-key($settings, weight) {\n    font-weight: #{$prepend} map-get($font-weight-scale, map-get($settings, weight)) #{$append};\n  }\n\n  @if $is-responsive {\n    @each $breakpoint, $size in $breakpoints {\n      @if $breakpoint == first {\n        @include _stylize($size, $styles, $prepend, $append);\n      }\n      @else {\n        @include respond-from($breakpoint) {\n          @include _stylize($size, $styles, $prepend, $append);\n        }\n      }\n    }\n  }\n  @else {\n    @if map-has-key($breakpoints, md) {\n      @include _stylize(map-get($breakpoints, md), $styles);\n    }\n    @else {\n      @include _stylize(map-get($breakpoints, first), $styles);\n    }\n  }\n}\n\n@mixin _space-text($settings) {\n  @include margin( var(#{'--' + map-get($settings, 'margin') + '-spacing'}) );\n}\n\n@mixin text-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($text-settings, $name);\n  @if $settings {\n    $append: '';\n    @if $important {\n      $append: ' !important';\n    }\n\n    @include _responsive-styles($settings, $text-styles, $is-responsive, $prepend, $append);\n\n    @if $with-spacing {\n      @include _space-text($settings);\n    }\n  }\n}\n\n@mixin title-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($title-settings, $name);\n  @if $settings {\n    $append: '';\n    @if $important {\n      $append: ' !important';\n    }\n\n    @include _responsive-styles($settings, $title-styles, $is-responsive, $prepend, $append);\n\n    @if $with-spacing {\n      @include _space-text($settings);\n    }\n  }\n}\n\n@mixin _set-typography-var($name, $value, $bp: null) {\n  @if $bp != null {\n    @include respond-from(#{$bp}) {\n      --#{$name}-spacing: #{space($value)};\n    }\n  }\n  @else {\n    --#{$name}-spacing: #{space($value)};\n  }\n}\n\n@mixin set-title-margin($margin, $bp:null) {\n  @include _set-typography-var(title, $margin, $bp);\n}\n\n@mixin set-text-margin($margin, $bp:null) {\n  @include _set-typography-var(text, $margin, $bp);\n}\n\n@mixin set-display-margin($margin, $bp:null) {\n  @include _set-typography-var(display, $margin, $bp);\n}\n","////\n/// Core Tool : Spacing space\n/// @group core\n////\n\n@use 'module/spacing';\n\n/// Set space property\n///\n/// @param {String} $property ['margin'] - propriété à appliquer à l'espacement `['margin', 'padding']`\n/// @param {Number | list} $value [2] - valeur de l'espacement en v ou w. peut être une liste si la direction n'est pas renseignée\n/// @param {String} $direction - direction de l'espacement `['x', 'y', 'top', 'right', 'bottom', 'left']`\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     @include _spacing('margin', 6v, 'bottom');\n///   }\n@mixin _spacing($property: margin, $value: 0, $direction: null) {\n  $v: spacing.space($value);\n  @if $direction != null {\n    @if $direction == 'x' {\n      #{$property}-left: $v;\n      #{$property}-right: $v;\n    }\n    @else if $direction == 'y' {\n      #{$property}-top: $v;\n      #{$property}-bottom: $v;\n    }\n    @else {\n      #{$property}-#{$direction}: $v;\n    }\n  }\n  @else {\n    #{$property}: $v;\n  }\n}\n\n@mixin _spacing-from($property: margin, $value: 0, $direction: null, $from: null) {\n  @include respond-from($from) {\n    @include _spacing($property, $value, $direction);\n  }\n}\n\n@mixin padding($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(padding, $values, null, $from);\n}\n\n@mixin padding-x($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'x', $from);\n}\n\n@mixin padding-y($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'y', $from);\n}\n\n@mixin padding-top($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'top', $from);\n}\n\n@mixin padding-right($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'right', $from);\n}\n\n@mixin padding-bottom($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'bottom', $from);\n}\n\n@mixin padding-left($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'left', $from);\n}\n\n@mixin margin($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(margin, $values, null, $from);\n}\n\n@mixin margin-x($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'x', $from);\n}\n\n@mixin margin-y($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'y', $from);\n}\n\n@mixin margin-top($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'top', $from);\n}\n\n@mixin margin-right($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'right', $from);\n}\n\n@mixin margin-bottom($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'bottom', $from);\n}\n\n@mixin margin-left($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'left', $from);\n}\n","////\n/// Core Tool : Spacing position\n/// @group core\n////\n\n@use 'module/spacing';\n\n@mixin position($position, $top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  position: #{$position};\n  @if $top != null {\n    top: #{space($top)};\n  }\n  @if $right != null {\n    right: #{space($right)};\n  }\n  @if $bottom != null {\n    bottom: #{space($bottom)};\n  }\n  @if $left != null {\n    left: #{space($left)};\n  }\n\n  @include size($width, $height);\n\n  @content;\n}\n\n@mixin relative($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(relative, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin absolute($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(absolute, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin fixed($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(fixed, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin sticky($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(sticky, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin top($top) {\n  top: spacing.space($top);\n}\n\n@mixin right($top) {\n  right: spacing.space($top);\n}\n\n@mixin bottom($top) {\n  bottom: spacing.space($top);\n}\n\n@mixin left($top) {\n  left: spacing.space($top);\n}\n","@charset \"UTF-8\";\n/* ¯¯¯¯¯¯¯¯¯ *\\\n  TOGGLE\n\\* ˍˍˍˍˍˍˍˍˍ */\n@media (min-width: 36em) {\n  /*! media sm */\n}\n@media (min-width: 48em) {\n  /*! media md */\n}\n@media (min-width: 62em) {\n  /*! media lg */\n}\n@media (min-width: 78em) {\n  /*! media xl */\n}\n.fr-toggle {\n  display: flex;\n  flex-wrap: wrap;\n  position: relative;\n  padding: 1rem 0;\n  --text-spacing: 0;\n  --title-spacing: 0;\n}\n.fr-toggle input[type=checkbox] {\n  width: 2.5rem;\n  height: 1.5rem;\n  position: absolute;\n  opacity: 0;\n}\n.fr-toggle input[type=checkbox]:checked ~ .fr-toggle__label[data-fr-unchecked-label][data-fr-checked-label]::before {\n  content: attr(data-fr-checked-label);\n}\n.fr-toggle input[type=checkbox]:checked ~ .fr-toggle__label::after {\n  transform: translateX(1rem);\n}\n.fr-toggle label {\n  --toggle-status-width: auto;\n  display: inline-flex;\n  width: calc(100% - 2rem);\n  min-height: 1.5rem;\n  font-size: 1rem;\n  line-height: 1.5rem;\n}\n.fr-toggle label[data-fr-unchecked-label][data-fr-checked-label] {\n  padding-left: 0;\n}\n.fr-toggle label[data-fr-unchecked-label][data-fr-checked-label]::before {\n  content: attr(data-fr-unchecked-label);\n  margin-right: calc(var(--toggle-status-width)- 0.5rem);\n  margin-bottom: 1rem;\n}\n.fr-toggle label[data-fr-unchecked-label][data-fr-checked-label] + .fr-hint-text {\n  margin-top: 0.5rem;\n}\n.fr-toggle label::before {\n  content: \"\";\n  display: block;\n  flex-shrink: 0;\n  height: calc(1.25rem + 1px);\n  padding-top: 1.75rem;\n  font-size: 0.75rem;\n  line-height: 1.25rem;\n  border-radius: 0.75rem;\n  margin-right: 2rem;\n  min-width: 2.5rem;\n  max-width: 2.5rem;\n  background-repeat: no-repeat;\n}\n.fr-toggle label::after {\n  content: \"\";\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 1rem;\n  left: 0;\n  width: 1.5rem;\n  height: 1.5rem;\n  border-radius: 50%;\n  background-repeat: no-repeat;\n  background-size: 1rem;\n  background-position: center;\n}\n.fr-toggle .fr-hint-text {\n  display: block;\n  margin-top: 1rem;\n  margin-bottom: 0;\n  font-size: 0.75rem;\n  line-height: 1.25rem;\n  flex-basis: 100%;\n}\n\n.fr-toggle--label-left .fr-toggle__input {\n  order: 1;\n  margin: 0 0 0 auto;\n}\n.fr-toggle--label-left .fr-toggle__input + label[data-fr-checked-label]::before {\n  margin-right: 0;\n  margin-left: calc(var(--toggle-status-width)- 0.5rem);\n}\n.fr-toggle--label-left .fr-toggle__label {\n  justify-content: space-between;\n  padding-left: 0;\n  width: calc(100% - 2rem);\n  flex: 1;\n}\n.fr-toggle--label-left .fr-toggle__label::before {\n  flex-shrink: 0;\n  order: 1;\n  margin-left: 1rem;\n  margin-right: 0;\n  text-align: right;\n  direction: rtl;\n}\n.fr-toggle--label-left .fr-toggle__label::after {\n  left: auto;\n  right: 1rem;\n}\n.fr-toggle--label-left .fr-hint-text {\n  order: 2;\n}\n\n.fr-toggle__list {\n  --ul-type: none;\n  --ol-type: none;\n  --ul-start: 0;\n  --ol-start: 0;\n  --xl-block: 0;\n  --li-bottom: 0;\n  --ol-content: none;\n}\n\n.fr-fieldset .fr-toggle__list li:first-child .fr-toggle {\n  padding-top: 0;\n}\n.fr-fieldset .fr-toggle__list li:first-child .fr-toggle label::after {\n  top: 0;\n}\n\n.fr-toggle label {\n  color: var(--text-label-grey);\n}\n.fr-toggle label::before {\n  color: var(--text-active-blue-france);\n  --data-uri-svg: url(\"data:image/svg+xml;charset=utf-8,<svg width='40' stroke='%23000091' height='24' viewBox='0 0 40 24' fill='transparent' xmlns='http://www.w3.org/2000/svg'><rect x='0.5' y='0.5' width='39' height='23' rx='11.5' /></svg>\");\n  background-image: var(--data-uri-svg);\n}\n:root[data-fr-theme=dark] .fr-toggle label::before {\n  --data-uri-svg: url(\"data:image/svg+xml;charset=utf-8,<svg width='40' stroke='%238585f6' height='24' viewBox='0 0 40 24' fill='transparent' xmlns='http://www.w3.org/2000/svg'><rect x='0.5' y='0.5' width='39' height='23' rx='11.5' /></svg>\");\n}\n\n.fr-toggle label::after {\n  color: var(--text-active-blue-france);\n  box-shadow: inset 0 0 0 1px var(--border-action-high-blue-france);\n  background-color: var(--background-default-grey);\n  --idle: transparent;\n  --hover: var(--background-default-grey-hover);\n  --active: var(--background-default-grey-active);\n}\n.fr-toggle input[type=checkbox] {\n  box-shadow: inset 0 0 0 1px var(--border-action-high-blue-france);\n}\n.fr-toggle input[type=checkbox]:checked {\n  background-color: var(--background-active-blue-france);\n  --idle: transparent;\n  --hover: var(--background-active-blue-france-hover);\n  --active: var(--background-active-blue-france-active);\n}\n.fr-toggle input[type=checkbox]:checked ~ .fr-toggle__label::before {\n  --data-uri-svg: url(\"data:image/svg+xml;charset=utf-8,<svg width='40' stroke='%23000091' height='24' viewBox='0 0 40 24' fill='%23000091' xmlns='http://www.w3.org/2000/svg'><rect x='0.5' y='0.5' width='39' height='23' rx='11.5' /></svg>\");\n  background-image: var(--data-uri-svg);\n}\n:root[data-fr-theme=dark] .fr-toggle input[type=checkbox]:checked ~ .fr-toggle__label::before {\n  --data-uri-svg: url(\"data:image/svg+xml;charset=utf-8,<svg width='40' stroke='%238585f6' height='24' viewBox='0 0 40 24' fill='%238585f6' xmlns='http://www.w3.org/2000/svg'><rect x='0.5' y='0.5' width='39' height='23' rx='11.5' /></svg>\");\n}\n\n.fr-toggle input[type=checkbox]:checked ~ .fr-toggle__label::after {\n  --data-uri-svg: url(\"data:image/svg+xml;charset=utf-8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'><path fill='%23000091' d='M10 15.17l9.2-9.2 1.4 1.42L10 18l-6.36-6.36 1.4-1.42z'/></svg>\");\n  background-image: var(--data-uri-svg);\n}\n:root[data-fr-theme=dark] .fr-toggle input[type=checkbox]:checked ~ .fr-toggle__label::after {\n  --data-uri-svg: url(\"data:image/svg+xml;charset=utf-8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'><path fill='%238585f6' d='M10 15.17l9.2-9.2 1.4 1.42L10 18l-6.36-6.36 1.4-1.42z'/></svg>\");\n}\n\n.fr-toggle input[type=checkbox]:disabled {\n  box-shadow: inset 0 0 0 1px var(--border-disabled-grey);\n}\n.fr-toggle input[type=checkbox]:disabled:checked {\n  background-color: var(--background-disabled-grey);\n  --idle: transparent;\n  --hover: var(--background-disabled-grey-hover);\n  --active: var(--background-disabled-grey-active);\n}\n.fr-toggle input[type=checkbox]:disabled:checked ~ .fr-toggle__label::before {\n  --data-uri-svg: url(\"data:image/svg+xml;charset=utf-8,<svg width='40' stroke='%23e5e5e5' height='24' viewBox='0 0 40 24' fill='%23e5e5e5' xmlns='http://www.w3.org/2000/svg'><rect x='0.5' y='0.5' width='39' height='23' rx='11.5' /></svg>\");\n  background-image: var(--data-uri-svg);\n}\n:root[data-fr-theme=dark] .fr-toggle input[type=checkbox]:disabled:checked ~ .fr-toggle__label::before {\n  --data-uri-svg: url(\"data:image/svg+xml;charset=utf-8,<svg width='40' stroke='%232a2a2a' height='24' viewBox='0 0 40 24' fill='%232a2a2a' xmlns='http://www.w3.org/2000/svg'><rect x='0.5' y='0.5' width='39' height='23' rx='11.5' /></svg>\");\n}\n\n.fr-toggle input[type=checkbox]:disabled:checked ~ .fr-toggle__label::after {\n  --data-uri-svg: url(\"data:image/svg+xml;charset=utf-8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'><path fill='%23929292' d='M10 15.17l9.2-9.2 1.4 1.42L10 18l-6.36-6.36 1.4-1.42z'/></svg>\");\n  background-image: var(--data-uri-svg);\n}\n:root[data-fr-theme=dark] .fr-toggle input[type=checkbox]:disabled:checked ~ .fr-toggle__label::after {\n  --data-uri-svg: url(\"data:image/svg+xml;charset=utf-8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'><path fill='%23666' d='M10 15.17l9.2-9.2 1.4 1.42L10 18l-6.36-6.36 1.4-1.42z'/></svg>\");\n}\n\n.fr-toggle input[type=checkbox]:disabled ~ .fr-toggle__label::before {\n  color: var(--text-disabled-grey);\n  --data-uri-svg: url(\"data:image/svg+xml;charset=utf-8,<svg width='40' stroke='%23e5e5e5' height='24' viewBox='0 0 40 24' fill='transparent' xmlns='http://www.w3.org/2000/svg'><rect x='0.5' y='0.5' width='39' height='23' rx='11.5' /></svg>\");\n  background-image: var(--data-uri-svg);\n}\n:root[data-fr-theme=dark] .fr-toggle input[type=checkbox]:disabled ~ .fr-toggle__label::before {\n  --data-uri-svg: url(\"data:image/svg+xml;charset=utf-8,<svg width='40' stroke='%232a2a2a' height='24' viewBox='0 0 40 24' fill='transparent' xmlns='http://www.w3.org/2000/svg'><rect x='0.5' y='0.5' width='39' height='23' rx='11.5' /></svg>\");\n}\n\n.fr-toggle input[type=checkbox]:disabled ~ .fr-toggle__label::after {\n  color: var(--text-disabled-grey);\n  box-shadow: inset 0 0 0 1px var(--border-disabled-grey);\n}\n\n.fr-toggle .fr-hint-text {\n  color: var(--text-mention-grey);\n}\n.fr-toggle--border-bottom {\n  box-shadow: inset 0 -1px 0 0 var(--border-default-grey);\n}\n\n.fr-toggle--error label,\n.fr-fieldset--error .fr-toggle label {\n  color: var(--text-default-error);\n}\n.fr-toggle--error label::before,\n.fr-fieldset--error .fr-toggle label::before {\n  color: var(--text-default-error);\n  --data-uri-svg: url(\"data:image/svg+xml;charset=utf-8,<svg width='40' stroke='%23ce0500' height='24' viewBox='0 0 40 24' fill='transparent' xmlns='http://www.w3.org/2000/svg'><rect x='0.5' y='0.5' width='39' height='23' rx='11.5' /></svg>\");\n  background-image: var(--data-uri-svg);\n}\n:root[data-fr-theme=dark] .fr-toggle--error label::before, :root[data-fr-theme=dark] .fr-fieldset--error .fr-toggle label::before {\n  --data-uri-svg: url(\"data:image/svg+xml;charset=utf-8,<svg width='40' stroke='%23ff5655' height='24' viewBox='0 0 40 24' fill='transparent' xmlns='http://www.w3.org/2000/svg'><rect x='0.5' y='0.5' width='39' height='23' rx='11.5' /></svg>\");\n}\n\n.fr-toggle--error label::after,\n.fr-fieldset--error .fr-toggle label::after {\n  box-shadow: inset 0 0 0 1px var(--border-plain-error);\n}\n.fr-toggle--error input[type=checkbox]:checked ~ .fr-toggle__label::before,\n.fr-fieldset--error .fr-toggle input[type=checkbox]:checked ~ .fr-toggle__label::before {\n  --data-uri-svg: url(\"data:image/svg+xml;charset=utf-8,<svg width='40' stroke='%23ce0500' height='24' viewBox='0 0 40 24' fill='%23000091' xmlns='http://www.w3.org/2000/svg'><rect x='0.5' y='0.5' width='39' height='23' rx='11.5' /></svg>\");\n  background-image: var(--data-uri-svg);\n}\n:root[data-fr-theme=dark] .fr-toggle--error input[type=checkbox]:checked ~ .fr-toggle__label::before, :root[data-fr-theme=dark] .fr-fieldset--error .fr-toggle input[type=checkbox]:checked ~ .fr-toggle__label::before {\n  --data-uri-svg: url(\"data:image/svg+xml;charset=utf-8,<svg width='40' stroke='%23ff5655' height='24' viewBox='0 0 40 24' fill='%238585f6' xmlns='http://www.w3.org/2000/svg'><rect x='0.5' y='0.5' width='39' height='23' rx='11.5' /></svg>\");\n}\n\n.fr-toggle--valid label,\n.fr-fieldset--valid .fr-toggle label {\n  color: var(--text-default-success);\n}\n.fr-toggle--valid label::before,\n.fr-fieldset--valid .fr-toggle label::before {\n  color: var(--text-default-success);\n  --data-uri-svg: url(\"data:image/svg+xml;charset=utf-8,<svg width='40' stroke='%2318753c' height='24' viewBox='0 0 40 24' fill='transparent' xmlns='http://www.w3.org/2000/svg'><rect x='0.5' y='0.5' width='39' height='23' rx='11.5' /></svg>\");\n  background-image: var(--data-uri-svg);\n}\n:root[data-fr-theme=dark] .fr-toggle--valid label::before, :root[data-fr-theme=dark] .fr-fieldset--valid .fr-toggle label::before {\n  --data-uri-svg: url(\"data:image/svg+xml;charset=utf-8,<svg width='40' stroke='%2327a658' height='24' viewBox='0 0 40 24' fill='transparent' xmlns='http://www.w3.org/2000/svg'><rect x='0.5' y='0.5' width='39' height='23' rx='11.5' /></svg>\");\n}\n\n.fr-toggle--valid label::after,\n.fr-fieldset--valid .fr-toggle label::after {\n  box-shadow: inset 0 0 0 1px var(--border-plain-success);\n}\n.fr-toggle--valid input[type=checkbox]:checked ~ .fr-toggle__label::before,\n.fr-fieldset--valid .fr-toggle input[type=checkbox]:checked ~ .fr-toggle__label::before {\n  --data-uri-svg: url(\"data:image/svg+xml;charset=utf-8,<svg width='40' stroke='%2318753c' height='24' viewBox='0 0 40 24' fill='%23000091' xmlns='http://www.w3.org/2000/svg'><rect x='0.5' y='0.5' width='39' height='23' rx='11.5' /></svg>\");\n  background-image: var(--data-uri-svg);\n}\n:root[data-fr-theme=dark] .fr-toggle--valid input[type=checkbox]:checked ~ .fr-toggle__label::before, :root[data-fr-theme=dark] .fr-fieldset--valid .fr-toggle input[type=checkbox]:checked ~ .fr-toggle__label::before {\n  --data-uri-svg: url(\"data:image/svg+xml;charset=utf-8,<svg width='40' stroke='%2327a658' height='24' viewBox='0 0 40 24' fill='%238585f6' xmlns='http://www.w3.org/2000/svg'><rect x='0.5' y='0.5' width='39' height='23' rx='11.5' /></svg>\");\n}\n\n@media (min-width: 36em) {\n  /*! media sm */\n}\n@media (min-width: 48em) {\n  /*! media md */\n}\n@media (min-width: 62em) {\n  /*! media lg */\n}\n@media (min-width: 78em) {\n  /*! media xl */\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle input[type=checkbox]::-ms-check {\n    display: none;\n  }\n  .fr-toggle input[type=checkbox]:checked::before, .fr-toggle input[type=checkbox]:checked::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-toggle input[type=checkbox]:checked::before, .fr-toggle input[type=checkbox]:checked::after {\n    background-image: url(\"../../icons/system/check-line.svg\");\n  }\n  .fr-toggle input[type=checkbox]:checked::before, .fr-toggle input[type=checkbox]:checked::after {\n    width: 1.5rem;\n    height: 1.5rem;\n  }\n  .fr-toggle__list {\n    list-style: none;\n    padding: 0;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle label {\n    color: #161616;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle label::before {\n    color: #000091;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle label::before {\n    background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg width='40' stroke='%23000091' height='24' viewBox='0 0 40 24' fill='transparent' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='0.5' y='0.5' width='39' height='23' rx='11.5' /%3E%3C/svg%3E\");\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle label::after {\n    color: #000091;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle label::after {\n    box-shadow: inset 0 0 0 1px #000091;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle label::after {\n    background-color: #fff;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle input[type=checkbox] {\n    box-shadow: inset 0 0 0 1px #000091;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle input[type=checkbox]:checked {\n    background-color: #000091;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle input[type=checkbox]:checked ~ .fr-toggle__label::before {\n    background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg width='40' stroke='%23000091' height='24' viewBox='0 0 40 24' fill='%23000091' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='0.5' y='0.5' width='39' height='23' rx='11.5' /%3E%3C/svg%3E\");\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle input[type=checkbox]:checked ~ .fr-toggle__label::after {\n    background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23000091' d='M10 15.17l9.2-9.2 1.4 1.42L10 18l-6.36-6.36 1.4-1.42z'/%3E%3C/svg%3E\");\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle input[type=checkbox]:disabled {\n    box-shadow: inset 0 0 0 1px #e5e5e5;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle input[type=checkbox]:disabled:checked {\n    background-color: #e5e5e5;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle input[type=checkbox]:disabled:checked ~ .fr-toggle__label::before {\n    background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg width='40' stroke='%23e5e5e5' height='24' viewBox='0 0 40 24' fill='%23e5e5e5' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='0.5' y='0.5' width='39' height='23' rx='11.5' /%3E%3C/svg%3E\");\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle input[type=checkbox]:disabled:checked ~ .fr-toggle__label::after {\n    background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23929292' d='M10 15.17l9.2-9.2 1.4 1.42L10 18l-6.36-6.36 1.4-1.42z'/%3E%3C/svg%3E\");\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle input[type=checkbox]:disabled ~ .fr-toggle__label::before {\n    color: #929292;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle input[type=checkbox]:disabled ~ .fr-toggle__label::before {\n    background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg width='40' stroke='%23e5e5e5' height='24' viewBox='0 0 40 24' fill='transparent' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='0.5' y='0.5' width='39' height='23' rx='11.5' /%3E%3C/svg%3E\");\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle input[type=checkbox]:disabled ~ .fr-toggle__label::after {\n    color: #929292;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle input[type=checkbox]:disabled ~ .fr-toggle__label::after {\n    box-shadow: inset 0 0 0 1px #e5e5e5;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle .fr-hint-text {\n    color: #666;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle--border-bottom {\n    box-shadow: inset 0 -1px 0 0 #ddd;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle--error label,\n  .fr-fieldset--error .fr-toggle label {\n    color: #ce0500;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle--error label::before,\n  .fr-fieldset--error .fr-toggle label::before {\n    color: #ce0500;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle--error label::before,\n  .fr-fieldset--error .fr-toggle label::before {\n    background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg width='40' stroke='%23ce0500' height='24' viewBox='0 0 40 24' fill='transparent' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='0.5' y='0.5' width='39' height='23' rx='11.5' /%3E%3C/svg%3E\");\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle--error label::after,\n  .fr-fieldset--error .fr-toggle label::after {\n    box-shadow: inset 0 0 0 1px #ce0500;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle--error input[type=checkbox]:checked ~ .fr-toggle__label::before,\n  .fr-fieldset--error .fr-toggle input[type=checkbox]:checked ~ .fr-toggle__label::before {\n    background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg width='40' stroke='%23ce0500' height='24' viewBox='0 0 40 24' fill='%23000091' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='0.5' y='0.5' width='39' height='23' rx='11.5' /%3E%3C/svg%3E\");\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle--valid label,\n  .fr-fieldset--valid .fr-toggle label {\n    color: #18753c;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle--valid label::before,\n  .fr-fieldset--valid .fr-toggle label::before {\n    color: #18753c;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle--valid label::before,\n  .fr-fieldset--valid .fr-toggle label::before {\n    background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg width='40' stroke='%2318753c' height='24' viewBox='0 0 40 24' fill='transparent' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='0.5' y='0.5' width='39' height='23' rx='11.5' /%3E%3C/svg%3E\");\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle--valid label::after,\n  .fr-fieldset--valid .fr-toggle label::after {\n    box-shadow: inset 0 0 0 1px #18753c;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-toggle--valid input[type=checkbox]:checked ~ .fr-toggle__label::before,\n  .fr-fieldset--valid .fr-toggle input[type=checkbox]:checked ~ .fr-toggle__label::before {\n    background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg width='40' stroke='%2318753c' height='24' viewBox='0 0 40 24' fill='%23000091' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='0.5' y='0.5' width='39' height='23' rx='11.5' /%3E%3C/svg%3E\");\n  }\n}\n\n@media print {\n  .fr-toggle label {\n    color: #161616;\n  }\n  .fr-toggle label::before {\n    color: #000091;\n  }\n}\n@media print and (-ms-high-contrast: none), print and (-ms-high-contrast: active) {\n  .fr-toggle label::before {\n    background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg width='40' stroke='%23000091' height='24' viewBox='0 0 40 24' fill='transparent' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='0.5' y='0.5' width='39' height='23' rx='11.5' /%3E%3C/svg%3E\");\n  }\n}\n@media print {\n  .fr-toggle label::after {\n    color: #000091;\n    box-shadow: inset 0 0 0 1px #000091;\n    background-color: #fff;\n  }\n}\n@media print {\n  .fr-toggle input[type=checkbox] {\n    box-shadow: inset 0 0 0 1px #000091;\n  }\n  .fr-toggle input[type=checkbox]:checked {\n    background-color: #000091;\n  }\n}\n@media print and (-ms-high-contrast: none), print and (-ms-high-contrast: active) {\n  .fr-toggle input[type=checkbox]:checked ~ .fr-toggle__label::before {\n    background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg width='40' stroke='%23000091' height='24' viewBox='0 0 40 24' fill='%23000091' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='0.5' y='0.5' width='39' height='23' rx='11.5' /%3E%3C/svg%3E\");\n  }\n}\n@media print and (-ms-high-contrast: none), print and (-ms-high-contrast: active) {\n  .fr-toggle input[type=checkbox]:checked ~ .fr-toggle__label::after {\n    background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23000091' d='M10 15.17l9.2-9.2 1.4 1.42L10 18l-6.36-6.36 1.4-1.42z'/%3E%3C/svg%3E\");\n  }\n}\n@media print {\n  .fr-toggle input[type=checkbox]:disabled {\n    box-shadow: inset 0 0 0 1px #e5e5e5;\n  }\n  .fr-toggle input[type=checkbox]:disabled:checked {\n    background-color: #e5e5e5;\n  }\n}\n@media print and (-ms-high-contrast: none), print and (-ms-high-contrast: active) {\n  .fr-toggle input[type=checkbox]:disabled:checked ~ .fr-toggle__label::before {\n    background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg width='40' stroke='%23e5e5e5' height='24' viewBox='0 0 40 24' fill='%23e5e5e5' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='0.5' y='0.5' width='39' height='23' rx='11.5' /%3E%3C/svg%3E\");\n  }\n}\n@media print and (-ms-high-contrast: none), print and (-ms-high-contrast: active) {\n  .fr-toggle input[type=checkbox]:disabled:checked ~ .fr-toggle__label::after {\n    background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23929292' d='M10 15.17l9.2-9.2 1.4 1.42L10 18l-6.36-6.36 1.4-1.42z'/%3E%3C/svg%3E\");\n  }\n}\n@media print {\n  .fr-toggle input[type=checkbox]:disabled ~ .fr-toggle__label::before {\n    color: #929292;\n  }\n}\n@media print and (-ms-high-contrast: none), print and (-ms-high-contrast: active) {\n  .fr-toggle input[type=checkbox]:disabled ~ .fr-toggle__label::before {\n    background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg width='40' stroke='%23e5e5e5' height='24' viewBox='0 0 40 24' fill='transparent' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='0.5' y='0.5' width='39' height='23' rx='11.5' /%3E%3C/svg%3E\");\n  }\n}\n@media print {\n  .fr-toggle input[type=checkbox]:disabled ~ .fr-toggle__label::after {\n    color: #929292;\n    box-shadow: inset 0 0 0 1px #e5e5e5;\n  }\n}\n@media print {\n  .fr-toggle .fr-hint-text {\n    color: #666;\n  }\n}\n@media print {\n  .fr-toggle--border-bottom {\n    box-shadow: inset 0 -1px 0 0 #ddd;\n  }\n}\n@media print {\n  .fr-toggle--error label,\n  .fr-fieldset--error .fr-toggle label {\n    color: #ce0500;\n  }\n  .fr-toggle--error label::before,\n  .fr-fieldset--error .fr-toggle label::before {\n    color: #ce0500;\n  }\n}\n@media print and (-ms-high-contrast: none), print and (-ms-high-contrast: active) {\n  .fr-toggle--error label::before,\n  .fr-fieldset--error .fr-toggle label::before {\n    background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg width='40' stroke='%23ce0500' height='24' viewBox='0 0 40 24' fill='transparent' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='0.5' y='0.5' width='39' height='23' rx='11.5' /%3E%3C/svg%3E\");\n  }\n}\n@media print {\n  .fr-toggle--error label::after,\n  .fr-fieldset--error .fr-toggle label::after {\n    box-shadow: inset 0 0 0 1px #ce0500;\n  }\n}\n@media print and (-ms-high-contrast: none), print and (-ms-high-contrast: active) {\n  .fr-toggle--error input[type=checkbox]:checked ~ .fr-toggle__label::before,\n  .fr-fieldset--error .fr-toggle input[type=checkbox]:checked ~ .fr-toggle__label::before {\n    background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg width='40' stroke='%23ce0500' height='24' viewBox='0 0 40 24' fill='%23000091' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='0.5' y='0.5' width='39' height='23' rx='11.5' /%3E%3C/svg%3E\");\n  }\n}\n@media print {\n  .fr-toggle--valid label,\n  .fr-fieldset--valid .fr-toggle label {\n    color: #18753c;\n  }\n  .fr-toggle--valid label::before,\n  .fr-fieldset--valid .fr-toggle label::before {\n    color: #18753c;\n  }\n}\n@media print and (-ms-high-contrast: none), print and (-ms-high-contrast: active) {\n  .fr-toggle--valid label::before,\n  .fr-fieldset--valid .fr-toggle label::before {\n    background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg width='40' stroke='%2318753c' height='24' viewBox='0 0 40 24' fill='transparent' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='0.5' y='0.5' width='39' height='23' rx='11.5' /%3E%3C/svg%3E\");\n  }\n}\n@media print {\n  .fr-toggle--valid label::after,\n  .fr-fieldset--valid .fr-toggle label::after {\n    box-shadow: inset 0 0 0 1px #18753c;\n  }\n}\n@media print and (-ms-high-contrast: none), print and (-ms-high-contrast: active) {\n  .fr-toggle--valid input[type=checkbox]:checked ~ .fr-toggle__label::before,\n  .fr-fieldset--valid .fr-toggle input[type=checkbox]:checked ~ .fr-toggle__label::before {\n    background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg width='40' stroke='%2318753c' height='24' viewBox='0 0 40 24' fill='%23000091' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='0.5' y='0.5' width='39' height='23' rx='11.5' /%3E%3C/svg%3E\");\n  }\n}\n@media print {\n  .fr-toggle label::before {\n    content: \"\";\n    display: block;\n    font-size: 1rem;\n    line-height: 1.5rem;\n  }\n  .fr-toggle .fr-hint-text {\n    font-size: 1rem;\n    line-height: 1.5rem;\n  }\n}","@use 'sass:list';\n@use 'sass:map';\n@use 'module/legacy';\n@use 'module/media-query';\n@use 'module/spacing';\n@use 'module/specificity';\n@use 'module/string';\n@use 'module/utilities';\n@use '../variable/constant';\n@use '../function/box-shadow' as bs;\n@use '../function/colors';\n@use '../function/result';\n@use '../function/token';\n\n$COLOR: constant.$value;\n\n@mixin element($prop, $context, $tokens, $options: (), $value: $COLOR) {\n  $legacy: map.get($options, legacy);\n  $important: map.get($options, important);\n  $hover: map.get($options, hover);\n  $standalone: map.get($options, standalone);\n\n  $legacy-target: null;\n  @if $legacy == true {\n    $legacy-target: ie11;\n  }\n\n  $tokens: token.normalise($tokens, $context);\n  $type: decision;\n  $options: (var: true);\n\n  @if $legacy or $standalone {\n    $type: hex;\n    $option: (theme: light);\n  }\n\n  $colors: colors.from-list($tokens, $type, $options);\n  $result: result.get($colors, $value);\n  $result: specificity.important($result, $important);\n\n  @include legacy.is($legacy-target) {\n    #{$prop}: #{string.unstringify($result)};\n  }\n\n  @if ($hover == true or ($hover == inherit and $legacy == false)) and ($context == background and list.length($tokens) == 1) {\n\n    $token: nth($tokens, 1);\n    @if $legacy or $standalone {\n      @include _apply-pseudos($token, false, true, $legacy-target, $prop, $value, $important);\n    }\n    @else {\n      @if $prop == background-color {\n        --idle: transparent; // #{$result};\n        @include _apply-pseudos($token, true, false, null, $prop, $value, $important);\n      }\n      @else {\n        @include _apply-pseudos($token, true, true, null, $prop, $value, $important);\n      }\n    }\n  }\n}\n\n@mixin _apply-pseudos($token, $decision: true, $pseudo: false, $target: null, $prop: background-color, $value: constant.$value, $important: false) {\n  @include legacy.is($target) {\n    @include _apply-pseudo($token, hover, $decision, $pseudo, $prop, $value, $important);\n    @include _apply-pseudo($token, active, $decision, $pseudo, $prop, $value, $important);\n  }\n}\n\n@mixin _apply-pseudo($token, $type, $decision: true, $pseudo: false, $prop: background-color, $value: constant.$value, $important: false) {\n  $nest: null;\n  $p: --#{$type};\n  @if $pseudo {\n    $nest: '&:#{$type}';\n    $p: $prop;\n  }\n\n  $t: hex;\n  $options: (#{$type}: true);\n  @if $decision {\n    $t: decision;\n    $options: (var: true, #{$type}: true);\n  }\n\n  $color: colors.from($token, $t, $options);\n  $result: result.get($color, $value);\n  $result: specificity.important($result, $important);\n\n  @include utilities.nest($nest) {\n    #{$p}: #{string.unstringify($result)};\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin background($tokens, $options:()) {\n  @if not map.has-key($options, hover) {\n    $options: map.merge($options, (hover: inherit));\n  }\n  @include element(background-color, background, $tokens, $options);\n}\n\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - hover {boolean}: si true, surcharge la valeur de blend pour être héritée\n@mixin transparent-background($options) {\n  $legacy: map.get($options, legacy);\n  $important: map.get($options, important);\n  $hover: map.get($options, hover);\n  $tokens: token.normalise(default grey, background);\n  $value: specificity.important(transparent, $important);\n\n  @if $legacy {\n    @include legacy.is(ie11) {\n      background-color: transparent;\n\n      @if $hover {\n        &:hover {\n          background-color: rgba(0, 0, 0, 0.05);\n        }\n\n        &:active {\n          background-color: rgba(0, 0, 0, 0.1);\n        }\n      }\n    }\n  }\n  @else {\n    background-color: #{$value};\n    @if $hover {\n      --hover: inherit;\n      --active: inherit;\n    }\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin background-image($tokens, $options, $value: linear-gradient(0deg, $COLOR, $COLOR)) {\n  $d: token.length($tokens);\n  @if $d > 1 and $value == linear-gradient(0deg, $COLOR, $COLOR) {\n    $transformed: ();\n    @for $i from 1 through $d {\n      $c: string.unquote('$color##{$i}');\n      $transformed: list.append($transformed, linear-gradient(0deg, $c, $c), comma);\n    }\n    $value: $transformed;\n  }\n  @include element(background-image, background, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin text($tokens, $options) {\n  @include element(color, text, $tokens, $options);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin text-fill($tokens, $options) {\n  @include element(-webkit-text-fill-color, text, $tokens, $options);\n}\n\n/// Ajout d'une couleur de fill sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin fill($tokens, $options) {\n  @include element(fill, background , $tokens, $options);\n}\n\n/// Ajout d'une couleur de border sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - side {String}: le côté affecté. valeurs: top, right, bottom, left\n/// @param {List} $value - définition des propriétés de border\n@mixin border($tokens, $options, $value:1px solid $COLOR) {\n  $prop:border;\n  @if map.has-key($options, side) {\n    $prop:border-#{map.get($options, side)};\n  }\n  @include element($prop, border, $tokens, $options, $value);\n}\n\n@mixin no-border($options: ()) {\n  $breakpoint: map.get($options, breakpoint);\n  $legacy: map.get($options, legacy);\n  @include media-query.respond-from($breakpoint) {\n    @if $legacy {\n      @include legacy.is(ie11) {\n        border: 0;\n      }\n    }\n    @else {\n      border: 0;\n    }\n  }\n}\n\n/// Ajout d'une couleur d'outline sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés d'outline\n@mixin outline($tokens, $options, $value:1px solid $COLOR) {\n  @include element(outline, border, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de box-shadow sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés de box-shadow\n@mixin box-shadow($tokens, $options, $value: all-1-in) {\n  $has-keys: true;\n  $transformed: ();\n  $d: token.length($tokens);\n  $i: 1;\n  @each $v in $value {\n    @if bs.has($v) {\n      $transformed: append($transformed, bs.get($v, $i), comma);\n      @if $i < $d {\n        $i: $i + 1;\n      }\n    }\n    @else {\n      $has-keys: false;\n    }\n  }\n  @if $has-keys {\n    $value: $transformed;\n  }\n  @include element(box-shadow, border, $tokens, $options, spacing.space($value));\n}\n\n/// Supprime la shadow-box sur l'élément\n/// @access public\n/// @param {string} $breakpoint - la shadow-box est retiré à partir d'un breakpoint si celui-ci est défini\n@mixin no-box-shadow($options) {\n  $breakpoint: map.get($options, breakpoint);\n  $legacy: map.get($options, legacy);\n  @include media-query.respond-from($breakpoint) {\n    @if $legacy {\n      @include legacy.is(ie11) {\n        box-shadow: none;\n      }\n    }\n    @else {\n      box-shadow: none;\n    }\n  }\n}\n","////\n/// Core Tool : Spacing size\n/// @group core\n////\n\n@use '../../../../../module/spacing';\n\n@mixin width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{spacing.space($width)};\n    }\n  }\n}\n\n@mixin min-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      min-width: #{spacing.space($width)};\n    }\n  }\n}\n\n@mixin max-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      max-width: #{spacing.space($width)};\n    }\n  }\n}\n\n@mixin height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      height: #{spacing.space($height)};\n    }\n  }\n}\n\n@mixin min-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      min-height: #{spacing.space($height)};\n    }\n  }\n}\n\n@mixin max-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      max-height: #{spacing.space($height)};\n    }\n  }\n}\n\n@mixin size($width:null, $height:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{spacing.space($width)};\n    }\n    @if $height != null {\n      height: #{spacing.space($height)};\n    }\n  }\n}\n\n@mixin min-size($min-width:null, $min-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $min-width != null {\n      min-width: #{spacing.space($min-width)};\n    }\n    @if $min-height != null {\n      min-height: #{spacing.space($min-height)};\n    }\n  }\n}\n\n@mixin max-size($max-width:null, $max-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $max-width != null {\n      max-width: #{spacing.space($max-width)};\n    }\n    @if $max-height != null {\n      max-height: #{spacing.space($max-height)};\n    }\n  }\n}\n","////\n/// Core Tool : Selector pseudo\n/// @group core\n////\n\n@mixin _pseudo($type:before, $content:null, $display:null) {\n  @if $type != after and $type != before and $type != marker and $type != (before after) {\n    @error '$type must be before or after element';\n  }\n\n  $selector: ();\n\n  @each $pseudo in $type {\n    $selector: append($selector, '&::#{$pseudo}', 'comma');\n  }\n\n  #{$selector} {\n\n    @if $content != null {\n      content: $content;\n    }\n\n    @if $display != null {\n      display: #{$display};\n    }\n\n    @content;\n  }\n}\n\n@mixin before($content: null, $display: null) {\n  @include _pseudo(before, $content, $display) {\n    @content;\n  }\n}\n\n@mixin after($content: null, $display: null) {\n  @include _pseudo(after, $content, $display) {\n    @content;\n  }\n}\n\n@mixin marker($content: null, $display: null) {\n  @include _pseudo(marker, $content, $display) {\n    @content;\n  }\n}\n","@use 'sass:map';\n@use 'module/specificity';\n@use 'module/legacy';\n@use 'module/selector/mixin/theme' as selector;\n@use 'module/utilities';\n@use 'module/string';\n@use '../function/token';\n@use '../function/colors';\n@use '../function/result';\n\n/// Combinaison de couleur appliquée à un svg intégré en data-uri\n/// @access public\n// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {Object} $value - le SVG en data-uri\n/// @param {String} $prop - propriété sur laquelle est assignée le svg\n/// @example @include scheme-element-data-uri-svg(text title grey, false, \"<svg><path fill='$COLOR'></path></svg>\"));\n@mixin data-uri-svg($tokens, $options: (), $value: \"<svg><path fill='$COLOR'></path></svg>\", $prop: background-image, $var: 'data-uri-svg') {\n  $legacy: map.get($options, legacy);\n  $important: map.get($options, important);\n  $tokens: token.normalise($tokens);\n  $light-colors: colors.from-list($tokens, hex, (theme: light, hover: map.get($options, hover), active: map.get($options, active)));\n  $light: result.get($light-colors, $value);\n  $light: specificity.important($light, $important);\n\n  @if $legacy and $prop != false {\n    @include legacy.is(ie11) {\n      @if $prop != false {\n        #{$prop}: #{url(utilities.data-uri(string.encode-svg($light, true), svg))};\n      }\n    }\n  }\n  @else {\n    --#{$var}: #{url(utilities.data-uri(string.encode-svg($light, false), svg))};\n\n    $dark-colors: colors.from-list($tokens, hex, (theme: dark, hover: map.get($options, hover), active: map.get($options, active)));\n    $dark: result.get($dark-colors, $value);\n    $dark: specificity.important($dark, $important);\n\n    @include selector.theme(dark) {\n      --#{$var}: #{url(utilities.data-uri(string.encode-svg($dark, false), svg))};\n    }\n\n    @if $prop != false {\n      #{$prop}: var(--#{$var});\n    }\n  }\n}\n","////\n/// Core Tool : Display display\n/// @group core\n////\n\n@mixin display-flex($flex-direction: row, $align-items: null, $justify-content: null, $flex-wrap: null, $inline: false) {\n\n  @if $inline == true {\n    display: inline-flex;\n  }\n  @else {\n    display: flex;\n  }\n\n  @if $flex-direction != null {\n    flex-direction: #{$flex-direction};\n  }\n\n  @if $align-items != null {\n    align-items: #{$align-items};\n  }\n\n  @if $justify-content != null {\n    justify-content: #{$justify-content};\n  }\n\n  @if $flex-wrap != null {\n    flex-wrap: #{$flex-wrap};\n  }\n}\n","////\n/// Toggle Module : Variants\n/// @group toggle\n////\n\n@use 'module/spacing';\n\n#{ns(toggle--label-left)} {\n  #{ns(toggle__input)} {\n    order: 1;\n    @include margin(0 0 0 auto);\n\n    + label#{ns-attr(checked-label)} {\n      @include before {\n        @include margin-right(0);\n        @include margin-left(calc(var(--toggle-status-width) - #{spacing.space(2v)}));\n      }\n    }\n  }\n\n  #{ns(toggle__label)} {\n    justify-content: space-between;\n    @include padding-left(0);\n    width: calc(100% - #{space(8v)});\n    flex: 1;\n\n    @include before {\n      flex-shrink: 0;\n      order: 1;\n      @include margin-left(4v);\n      @include margin-right(0);\n      text-align: right;\n      direction: rtl;\n    }\n\n    @include after {\n      left: auto;\n      right: spacing.space(4v);\n    }\n  }\n\n  #{ns(hint-text)} {\n    order: 2;\n  }\n}\n","////\n/// Toggle Module : Group\n/// @group toggle\n////\n\n#{ns(toggle)}__list {\n  @include disable-list-style;\n}\n\n#{ns(fieldset)} {\n  #{ns(toggle)}__list {\n    li:first-child #{ns(toggle)} {\n      @include padding-top(0);\n\n      label {\n        @include after {\n          top: 0;\n        }\n      }\n    }\n  }\n}\n","////\n/// Core Tool : Reset list\n/// @group core\n////\n\n@mixin enable-list-style() {\n  $selector: null;\n\n  @if & == null {\n    $selector: ':root';\n  }\n\n  @include nest($selector) {\n    --ul-type: disc;\n    --ol-type: decimal;\n    --ul-start: #{space(4v)};\n    --ol-start: #{space(6v)};\n    --xl-block: #{space(2v)};\n    --li-bottom: #{space(1v)};\n    --xl-base: 1em;\n    --ol-content: counters(li-counter, \".\") \".\\00a0\\00a0\";\n  }\n}\n\n@mixin disable-list-style() {\n  --ul-type: none;\n  --ol-type: none;\n  --ul-start: 0;\n  --ol-start: 0;\n  --xl-block: 0;\n  --li-bottom: 0;\n  --ol-content: none;\n}\n\n@mixin enable-list-style-legacy($unify: false) {\n  $ul: ul;\n  $ol: ol;\n\n  @if $unify {\n    $ul: selector-associate('&', 'ul');\n    $ol: selector-associate('&', 'ol');\n  }\n\n  @at-root {\n    #{$ul} {\n      list-style-type: disc;\n    }\n\n    #{$ol} {\n      list-style-type: decimal;\n    }\n\n    #{$ul},\n    #{$ol} {\n      @include padding-left(4v);\n      @include margin-y(2v);\n    }\n  }\n}\n\n@mixin disable-list-style-legacy($unify: false) {\n  $ul: '#{&} ul';\n  $ol: '#{&} ol';\n\n  @if $unify {\n    $ul: selector-associate('#{&}', 'ul');\n    $ol: selector-associate('#{&}', 'ol');\n  }\n\n  @at-root {\n    #{$ul} {\n      list-style-type: none;\n    }\n\n    #{$ol} {\n      list-style-type: none;\n    }\n\n    #{$ul},\n    #{$ol} {\n      @include padding-left(0);\n      @include margin-y(0);\n    }\n  }\n}\n","@mixin nest($selector: null) {\n  @if $selector {\n    #{$selector} {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n","////\n/// Toggle Scheme\n/// @group toggle\n////\n\n@use 'module/color';\n@use 'module/disabled';\n\n@mixin _toggle-scheme($legacy: false) {\n  #{ns(toggle)} {\n    label {\n      @include color.text(label grey, (legacy:$legacy));\n\n      @include before {\n        @include color.text(active blue-france, (legacy:$legacy));\n        @include color.data-uri-svg(border action-high blue-france, (legacy: $legacy), $toggle-unchecked-svg);\n      }\n\n      @include after {\n        @include color.text(active blue-france, (legacy:$legacy));\n        @include color.box-shadow(action-high blue-france, (legacy:$legacy), all-1-in);\n        @include color.background(default grey, (legacy:$legacy));\n      }\n    }\n\n    input[type=\"checkbox\"] {\n      @include color.box-shadow(action-high blue-france, (legacy:$legacy), all-1-in);\n\n      &:checked {\n        @include color.background(active blue-france, (legacy:$legacy));\n\n        ~ #{ns(toggle__label)} {\n          @include before {\n            @include color.data-uri-svg((border active blue-france) (border active blue-france), (legacy: $legacy), $toggle-checked-svg);\n          }\n\n          @include after {\n            @include color.data-uri-svg(active blue-france, (legacy: $legacy), $toggle-svg);\n          }\n        }\n      }\n\n      @include disabled.selector((), (legacy: $legacy, box-shadow: true)) {\n        &:checked {\n          @include disabled.colors((legacy: $legacy, background: true));\n\n          ~ #{ns(toggle__label)} {\n            @include before {\n              @include color.data-uri-svg((background disabled grey) (background disabled grey), (legacy: $legacy), $toggle-checked-svg);\n            }\n\n            @include after {\n              @include color.data-uri-svg(text disabled grey, (legacy: $legacy), $toggle-svg);\n            }\n          }\n        }\n\n        ~ #{ns(toggle__label)} {\n          @include before {\n            @include disabled.colors((legacy: $legacy, text: true));\n            @include color.data-uri-svg((background disabled grey), (legacy: $legacy), $toggle-unchecked-svg);\n          }\n\n          @include after {\n            @include disabled.colors((legacy: $legacy, text: true, box-shadow: true));\n          }\n        }\n      }\n    }\n\n    #{ns(hint-text)} {\n      @include color.text(mention grey, (legacy:$legacy));\n    }\n\n    &--border-bottom {\n      @include color.box-shadow(default grey, (legacy:$legacy), bottom-1-in);\n    }\n  }\n\n  #{ns(toggle--error)},\n  #{ns(fieldset--error)} #{ns(toggle)} {\n    label {\n      @include color.text(default error, (legacy:$legacy));\n\n      @include before {\n        @include color.text(default error, (legacy:$legacy));\n        @include color.data-uri-svg(border plain error, (legacy: $legacy), $toggle-unchecked-svg);\n      }\n\n      @include after {\n        @include color.box-shadow(border plain error, (legacy:$legacy), all-1-in);\n      }\n    }\n\n    input[type=\"checkbox\"] {\n      &:checked {\n        ~ #{ns(toggle__label)} {\n          @include before {\n            @include color.data-uri-svg((border plain error) (active blue-france), (legacy: $legacy), $toggle-checked-svg);\n          }\n        }\n      }\n    }\n  }\n\n  #{ns(toggle--valid)},\n  #{ns(fieldset--valid)} #{ns(toggle)} {\n    label {\n      @include color.text(default success, (legacy:$legacy));\n\n      @include before {\n        @include color.text(default success, (legacy:$legacy));\n        @include color.data-uri-svg(border plain success, (legacy: $legacy), $toggle-unchecked-svg);\n      }\n\n      @include after {\n        @include color.box-shadow(border plain success, (legacy:$legacy), all-1-in);\n      }\n    }\n\n    input[type=\"checkbox\"] {\n      &:checked {\n        ~ #{ns(toggle__label)} {\n          @include before {\n            @include color.data-uri-svg((border plain success) (active blue-france), (legacy: $legacy), $toggle-checked-svg);\n          }\n        }\n      }\n    }\n  }\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'colors';\n@use 'module/selector';\n\n/// Applique les couleurs disabled sur l'élément avec les sélecteurs appropriés\n/// @access public\n/// @param {map} map des options :\n///   - can-be-link {boolean}: ajoute le sélecteur de lien sans href.\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - background {boolean}: true, applique le token background disabled sur la couleur de fond\n///   - text {boolean}: true, applique le token text disabled sur la couleur de texte\n///   - box-shadow {}: si true, applique le token border disabled sur l'élément avec la box-shadow par défaut (encadré de 1 px). si une valeur de box-shadow est fournie, applique cette valeur (voir get-box-shadow)\n@mixin selector($options: (), $colors: null) {\n  $selectors: '&:disabled';\n  @if map.get($options, can-be-link) {\n    $selectors: list.append($selectors, selector.associate(&, 'a:not([href])'), comma);\n  }\n\n  @at-root #{$selectors} {\n    @if $colors != null {\n      @include colors.colors($colors);\n    }\n    @content;\n  }\n}\n","@use '../variable/breakpoints';\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `['xs', 'sm', 'md', 'lg', 'xl']`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-from(md) {\n///     }\n///   }\n@mixin respond-from($media) {\n  $limits: map_get(breakpoints.$values, $media);\n\n  @if $limits != null {\n    @media (min-width: nth($limits, 1)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n","@use 'module/media-query/variable/breakpoints';\n@use 'module/media-query';\n\n@mixin order () {\n  @each $bp, $limits in breakpoints.$values {\n    @if $bp != xs {\n      @include media-query.respond-from($bp) {\n        /*! media #{$bp} */\n      }\n    }\n  }\n}\n","/// Styles spécifiques pour les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin is($target) {\n  @if $target == ie10 or $target == ie11 {\n    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n/// Styles spécifiques pour les plateformes modernes, excluant les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin is-not($target) {\n  @if $target == ie10 or $target == ie11 {\n    @supports not (-ms-high-contrast: none) {\n      @content;\n    }\n  }\n}\n","////\n/// Toggle Legacy\n/// @group toggle\n////\n\n@use 'module/legacy';\n\n@include legacy.is(ie11) {\n  #{ns(toggle)} {\n    input[type=\"checkbox\"] {\n      &::-ms-check {\n        display: none;\n      }\n\n      &:checked {\n        @include icon-legacy(check-line, md);\n      }\n    }\n\n    &__list {\n      list-style: none;\n      @include padding(0);\n    }\n  }\n}\n","////\n/// Core Tool : Icon legacy\n/// @group core\n////\n\n@mixin icon-size-legacy($size:md, $restrain: null) {\n  @include _icon-pseudo($restrain) {\n    $size: icon-size($size);\n    @include size($size, $size);\n    @content;\n  }\n}\n\n@mixin icon-image-legacy($icon, $restrain: null, $important: false) {\n  $url: get-icon-url($icon, $important);\n  @include _icon-pseudo($restrain) {\n    background-image: $url;\n  }\n}\n\n@mixin icon-style-legacy($restrain: null) {\n  @include _icon-pseudo($restrain) {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n    @content;\n  }\n}\n\n@mixin icon-legacy($icon: null, $size: md, $restrain: null, $styling: true) {\n  @if $styling {\n    @include icon-style-legacy($restrain);\n  }\n\n  @if $icon != null {\n    @include icon-image-legacy($icon, $restrain);\n  }\n\n  @if $size != null {\n    @include icon-size-legacy($size, $restrain);\n  }\n\n  @include _icon-pseudo($restrain) {\n    @content;\n  }\n}\n\n@mixin generate-icons-legacy($config: $icons-config) {\n  @each $icon, $setting in $config {\n    #{ns(icon-#{$icon})} {\n      @include icon-image-legacy($icon);\n    }\n  }\n}\n","////\n/// Toggle Print\n/// @group toggle\n////\n\n@media print {\n  @import 'index';\n  @import 'style/scheme';\n\n  @include _toggle-scheme('print');\n\n  @import 'style/print';\n}\n","#{ns(toggle)} {\n  label {\n    @include before('', block) {\n      @include text-style(md);\n    }\n  }\n\n  #{ns(hint-text)} {\n    @include text-style(md);\n  }\n}\n"]}